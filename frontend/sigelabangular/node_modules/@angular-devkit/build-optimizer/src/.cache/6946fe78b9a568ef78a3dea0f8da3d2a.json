{"remainingRequest":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/public-ip/browser.js","dependencies":[{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/public-ip/browser.js","mtime":1495008983000},{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/cache-loader/dist/cjs.js","mtime":1553019068977},{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["'use strict';\nconst isIp = require('is-ip');\n\nconst defaults = {\n\ttimeout: 5000\n};\n\nconst urls = {\n\tv4: 'https://ipv4.icanhazip.com/',\n\tv6: 'https://ipv6.icanhazip.com/'\n};\n\nfunction queryHttps(version, opts) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst doReject = () => reject(new Error('Couldn\\'t find your IP'));\n\t\tconst xhr = new XMLHttpRequest();\n\n\t\txhr.onerror = doReject;\n\t\txhr.ontimeout = doReject;\n\t\txhr.onload = () => {\n\t\t\tconst ip = xhr.responseText.trim();\n\n\t\t\tif (!ip || !isIp[version](ip)) {\n\t\t\t\tdoReject();\n\t\t\t}\n\n\t\t\tresolve(ip);\n\t\t};\n\n\t\txhr.open('GET', urls[version]);\n\t\txhr.timeout = opts.timeout;\n\t\txhr.send();\n\t});\n}\n\nmodule.exports.v4 = opts => {\n\topts = Object.assign({}, defaults, opts);\n\treturn queryHttps('v4', opts);\n};\n\nmodule.exports.v6 = opts => {\n\topts = Object.assign({}, defaults, opts);\n\treturn queryHttps('v6', opts);\n};\n",null]}