{"remainingRequest":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/angularfire2/firestore/collection/collection.js","dependencies":[{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/angularfire2/firestore/collection/collection.js","mtime":1516978436000},{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/cache-loader/dist/cjs.js","mtime":1553019068977},{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { fromCollectionRef } from '../observable/fromRef';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\nimport { docChanges, sortedChanges } from './changes';\nimport { AngularFirestoreDocument } from '../document/document';\nexport function validateEventsArray(events) {\n    if (!events || events.length === 0) {\n        events = ['added', 'removed', 'modified'];\n    }\n    return events;\n}\nvar AngularFirestoreCollection = /*@__PURE__*/ (function () {\n    function AngularFirestoreCollection(ref, query) {\n        this.ref = ref;\n        this.query = query;\n    }\n    AngularFirestoreCollection.prototype.stateChanges = function (events) {\n        if (!events || events.length === 0) {\n            return docChanges(this.query);\n        }\n        return docChanges(this.query)\n            .map(function (actions) { return actions.filter(function (change) { return events.indexOf(change.type) > -1; }); })\n            .filter(function (changes) { return changes.length > 0; });\n    };\n    AngularFirestoreCollection.prototype.auditTrail = function (events) {\n        return this.stateChanges(events).scan(function (current, action) { return current.concat(action); }, []);\n    };\n    AngularFirestoreCollection.prototype.snapshotChanges = function (events) {\n        events = validateEventsArray(events);\n        return sortedChanges(this.query, events);\n    };\n    AngularFirestoreCollection.prototype.valueChanges = function (events) {\n        return fromCollectionRef(this.query)\n            .map(function (actions) { return actions.payload.docs.map(function (a) { return a.data(); }); });\n    };\n    AngularFirestoreCollection.prototype.add = function (data) {\n        return this.ref.add(data);\n    };\n    AngularFirestoreCollection.prototype.doc = function (path) {\n        return new AngularFirestoreDocument(this.ref.doc(path));\n    };\n    return AngularFirestoreCollection;\n}());\nexport { AngularFirestoreCollection };\n//# sourceMappingURL=collection.js.map \n",null]}