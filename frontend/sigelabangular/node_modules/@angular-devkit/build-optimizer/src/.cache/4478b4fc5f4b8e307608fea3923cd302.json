{"remainingRequest":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/sweetalert2/dist/sweetalert2.all.js","dependencies":[{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/sweetalert2/dist/sweetalert2.all.js","mtime":1519832123000},{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/cache-loader/dist/cjs.js","mtime":1553019068977},{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/*!\n * sweetalert2 v7.12.17\n * Released under the MIT License.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Sweetalert2 = factory());\n}(this, (function () { 'use strict';\n\nvar styles = \"@-webkit-keyframes swal2-show {\\n  0% {\\n    -webkit-transform: scale(0.7);\\n            transform: scale(0.7); }\\n  45% {\\n    -webkit-transform: scale(1.05);\\n            transform: scale(1.05); }\\n  80% {\\n    -webkit-transform: scale(0.95);\\n            transform: scale(0.95); }\\n  100% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1); } }\\n\\n@keyframes swal2-show {\\n  0% {\\n    -webkit-transform: scale(0.7);\\n            transform: scale(0.7); }\\n  45% {\\n    -webkit-transform: scale(1.05);\\n            transform: scale(1.05); }\\n  80% {\\n    -webkit-transform: scale(0.95);\\n            transform: scale(0.95); }\\n  100% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1); } }\\n\\n@-webkit-keyframes swal2-hide {\\n  0% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n    opacity: 1; }\\n  100% {\\n    -webkit-transform: scale(0.5);\\n            transform: scale(0.5);\\n    opacity: 0; } }\\n\\n@keyframes swal2-hide {\\n  0% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n    opacity: 1; }\\n  100% {\\n    -webkit-transform: scale(0.5);\\n            transform: scale(0.5);\\n    opacity: 0; } }\\n\\n@-webkit-keyframes swal2-animate-success-line-tip {\\n  0% {\\n    top: 1.1875em;\\n    left: .0625em;\\n    width: 0; }\\n  54% {\\n    top: 1.0625em;\\n    left: .125em;\\n    width: 0; }\\n  70% {\\n    top: 2.1875em;\\n    left: -.375em;\\n    width: 3.125em; }\\n  84% {\\n    top: 3em;\\n    left: 1.3125em;\\n    width: 1.0625em; }\\n  100% {\\n    top: 2.8125em;\\n    left: .875em;\\n    width: 1.5625em; } }\\n\\n@keyframes swal2-animate-success-line-tip {\\n  0% {\\n    top: 1.1875em;\\n    left: .0625em;\\n    width: 0; }\\n  54% {\\n    top: 1.0625em;\\n    left: .125em;\\n    width: 0; }\\n  70% {\\n    top: 2.1875em;\\n    left: -.375em;\\n    width: 3.125em; }\\n  84% {\\n    top: 3em;\\n    left: 1.3125em;\\n    width: 1.0625em; }\\n  100% {\\n    top: 2.8125em;\\n    left: .875em;\\n    width: 1.5625em; } }\\n\\n@-webkit-keyframes swal2-animate-success-line-long {\\n  0% {\\n    top: 3.375em;\\n    right: 2.875em;\\n    width: 0; }\\n  65% {\\n    top: 3.375em;\\n    right: 2.875em;\\n    width: 0; }\\n  84% {\\n    top: 2.1875em;\\n    right: 0;\\n    width: 3.4375em; }\\n  100% {\\n    top: 2.375em;\\n    right: .5em;\\n    width: 2.9375em; } }\\n\\n@keyframes swal2-animate-success-line-long {\\n  0% {\\n    top: 3.375em;\\n    right: 2.875em;\\n    width: 0; }\\n  65% {\\n    top: 3.375em;\\n    right: 2.875em;\\n    width: 0; }\\n  84% {\\n    top: 2.1875em;\\n    right: 0;\\n    width: 3.4375em; }\\n  100% {\\n    top: 2.375em;\\n    right: .5em;\\n    width: 2.9375em; } }\\n\\n@-webkit-keyframes swal2-rotate-success-circular-line {\\n  0% {\\n    -webkit-transform: rotate(-45deg);\\n            transform: rotate(-45deg); }\\n  5% {\\n    -webkit-transform: rotate(-45deg);\\n            transform: rotate(-45deg); }\\n  12% {\\n    -webkit-transform: rotate(-405deg);\\n            transform: rotate(-405deg); }\\n  100% {\\n    -webkit-transform: rotate(-405deg);\\n            transform: rotate(-405deg); } }\\n\\n@keyframes swal2-rotate-success-circular-line {\\n  0% {\\n    -webkit-transform: rotate(-45deg);\\n            transform: rotate(-45deg); }\\n  5% {\\n    -webkit-transform: rotate(-45deg);\\n            transform: rotate(-45deg); }\\n  12% {\\n    -webkit-transform: rotate(-405deg);\\n            transform: rotate(-405deg); }\\n  100% {\\n    -webkit-transform: rotate(-405deg);\\n            transform: rotate(-405deg); } }\\n\\n@-webkit-keyframes swal2-animate-error-x-mark {\\n  0% {\\n    margin-top: 1.625em;\\n    -webkit-transform: scale(0.4);\\n            transform: scale(0.4);\\n    opacity: 0; }\\n  50% {\\n    margin-top: 1.625em;\\n    -webkit-transform: scale(0.4);\\n            transform: scale(0.4);\\n    opacity: 0; }\\n  80% {\\n    margin-top: -.375em;\\n    -webkit-transform: scale(1.15);\\n            transform: scale(1.15); }\\n  100% {\\n    margin-top: 0;\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n    opacity: 1; } }\\n\\n@keyframes swal2-animate-error-x-mark {\\n  0% {\\n    margin-top: 1.625em;\\n    -webkit-transform: scale(0.4);\\n            transform: scale(0.4);\\n    opacity: 0; }\\n  50% {\\n    margin-top: 1.625em;\\n    -webkit-transform: scale(0.4);\\n            transform: scale(0.4);\\n    opacity: 0; }\\n  80% {\\n    margin-top: -.375em;\\n    -webkit-transform: scale(1.15);\\n            transform: scale(1.15); }\\n  100% {\\n    margin-top: 0;\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n    opacity: 1; } }\\n\\n@-webkit-keyframes swal2-animate-error-icon {\\n  0% {\\n    -webkit-transform: rotateX(100deg);\\n            transform: rotateX(100deg);\\n    opacity: 0; }\\n  100% {\\n    -webkit-transform: rotateX(0deg);\\n            transform: rotateX(0deg);\\n    opacity: 1; } }\\n\\n@keyframes swal2-animate-error-icon {\\n  0% {\\n    -webkit-transform: rotateX(100deg);\\n            transform: rotateX(100deg);\\n    opacity: 0; }\\n  100% {\\n    -webkit-transform: rotateX(0deg);\\n            transform: rotateX(0deg);\\n    opacity: 1; } }\\n\\nbody.swal2-toast-shown.swal2-has-input > .swal2-container > .swal2-toast {\\n  flex-direction: column;\\n  align-items: stretch; }\\n  body.swal2-toast-shown.swal2-has-input > .swal2-container > .swal2-toast .swal2-actions {\\n    flex: 1;\\n    align-self: stretch;\\n    justify-content: flex-end;\\n    height: 2.2em; }\\n  body.swal2-toast-shown.swal2-has-input > .swal2-container > .swal2-toast .swal2-loading {\\n    justify-content: center; }\\n  body.swal2-toast-shown.swal2-has-input > .swal2-container > .swal2-toast .swal2-input {\\n    height: 2em;\\n    margin: .3125em auto;\\n    font-size: 1em; }\\n  body.swal2-toast-shown.swal2-has-input > .swal2-container > .swal2-toast .swal2-validationerror {\\n    font-size: 1em; }\\n\\nbody.swal2-toast-shown > .swal2-container {\\n  position: fixed;\\n  background-color: transparent; }\\n  body.swal2-toast-shown > .swal2-container.swal2-shown {\\n    background-color: transparent; }\\n  body.swal2-toast-shown > .swal2-container.swal2-top {\\n    top: 0;\\n    right: auto;\\n    bottom: auto;\\n    left: 50%;\\n    -webkit-transform: translateX(-50%);\\n            transform: translateX(-50%); }\\n  body.swal2-toast-shown > .swal2-container.swal2-top-end, body.swal2-toast-shown > .swal2-container.swal2-top-right {\\n    top: 0;\\n    right: 0;\\n    bottom: auto;\\n    left: auto; }\\n  body.swal2-toast-shown > .swal2-container.swal2-top-start, body.swal2-toast-shown > .swal2-container.swal2-top-left {\\n    top: 0;\\n    right: auto;\\n    bottom: auto;\\n    left: 0; }\\n  body.swal2-toast-shown > .swal2-container.swal2-center-start, body.swal2-toast-shown > .swal2-container.swal2-center-left {\\n    top: 50%;\\n    right: auto;\\n    bottom: auto;\\n    left: 0;\\n    -webkit-transform: translateY(-50%);\\n            transform: translateY(-50%); }\\n  body.swal2-toast-shown > .swal2-container.swal2-center {\\n    top: 50%;\\n    right: auto;\\n    bottom: auto;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); }\\n  body.swal2-toast-shown > .swal2-container.swal2-center-end, body.swal2-toast-shown > .swal2-container.swal2-center-right {\\n    top: 50%;\\n    right: 0;\\n    bottom: auto;\\n    left: auto;\\n    -webkit-transform: translateY(-50%);\\n            transform: translateY(-50%); }\\n  body.swal2-toast-shown > .swal2-container.swal2-bottom-start, body.swal2-toast-shown > .swal2-container.swal2-bottom-left {\\n    top: auto;\\n    right: auto;\\n    bottom: 0;\\n    left: 0; }\\n  body.swal2-toast-shown > .swal2-container.swal2-bottom {\\n    top: auto;\\n    right: auto;\\n    bottom: 0;\\n    left: 50%;\\n    -webkit-transform: translateX(-50%);\\n            transform: translateX(-50%); }\\n  body.swal2-toast-shown > .swal2-container.swal2-bottom-end, body.swal2-toast-shown > .swal2-container.swal2-bottom-right {\\n    top: auto;\\n    right: 0;\\n    bottom: 0;\\n    left: auto; }\\n\\n.swal2-popup.swal2-toast {\\n  flex-direction: row;\\n  align-items: center;\\n  width: auto;\\n  padding: 0.625em;\\n  box-shadow: 0 0 10px #d9d9d9;\\n  overflow-y: hidden; }\\n  .swal2-popup.swal2-toast .swal2-header {\\n    flex-direction: row; }\\n  .swal2-popup.swal2-toast .swal2-title {\\n    justify-content: flex-start;\\n    margin: 0 .6em;\\n    font-size: 1em; }\\n  .swal2-popup.swal2-toast .swal2-close {\\n    position: initial; }\\n  .swal2-popup.swal2-toast .swal2-content {\\n    justify-content: flex-start;\\n    font-size: 1em; }\\n  .swal2-popup.swal2-toast .swal2-icon {\\n    width: 32px;\\n    min-width: 32px;\\n    height: 32px;\\n    margin: 0; }\\n    .swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring {\\n      width: 32px;\\n      height: 32px; }\\n    .swal2-popup.swal2-toast .swal2-icon.swal2-info, .swal2-popup.swal2-toast .swal2-icon.swal2-warning, .swal2-popup.swal2-toast .swal2-icon.swal2-question {\\n      font-size: 26px;\\n      line-height: 32px; }\\n    .swal2-popup.swal2-toast .swal2-icon.swal2-error [class^='swal2-x-mark-line'] {\\n      top: 14px;\\n      width: 22px; }\\n      .swal2-popup.swal2-toast .swal2-icon.swal2-error [class^='swal2-x-mark-line'][class$='left'] {\\n        left: 5px; }\\n      .swal2-popup.swal2-toast .swal2-icon.swal2-error [class^='swal2-x-mark-line'][class$='right'] {\\n        right: 5px; }\\n  .swal2-popup.swal2-toast .swal2-actions {\\n    height: auto;\\n    margin: 0 .3125em; }\\n  .swal2-popup.swal2-toast .swal2-styled {\\n    margin: 0 .3125em;\\n    padding: .3125em .625em;\\n    font-size: 1em; }\\n    .swal2-popup.swal2-toast .swal2-styled:focus {\\n      box-shadow: 0 0 0 1px #fff, 0 0 0 2px rgba(50, 100, 150, 0.4); }\\n  .swal2-popup.swal2-toast .swal2-success {\\n    border-color: #a5dc86; }\\n    .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-circular-line'] {\\n      position: absolute;\\n      width: 32px;\\n      height: 45px;\\n      -webkit-transform: rotate(45deg);\\n              transform: rotate(45deg);\\n      border-radius: 50%; }\\n      .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-circular-line'][class$='left'] {\\n        top: -4px;\\n        left: -15px;\\n        -webkit-transform: rotate(-45deg);\\n                transform: rotate(-45deg);\\n        -webkit-transform-origin: 32px 32px;\\n                transform-origin: 32px 32px;\\n        border-radius: 64px 0 0 64px; }\\n      .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-circular-line'][class$='right'] {\\n        top: -4px;\\n        left: 15px;\\n        -webkit-transform-origin: 0 32px;\\n                transform-origin: 0 32px;\\n        border-radius: 0 64px 64px 0; }\\n    .swal2-popup.swal2-toast .swal2-success .swal2-success-ring {\\n      width: 32px;\\n      height: 32px; }\\n    .swal2-popup.swal2-toast .swal2-success .swal2-success-fix {\\n      top: 0;\\n      left: 7px;\\n      width: 7px;\\n      height: 43px; }\\n    .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-line'] {\\n      height: 5px; }\\n      .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-line'][class$='tip'] {\\n        top: 18px;\\n        left: 3px;\\n        width: 12px; }\\n      .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-line'][class$='long'] {\\n        top: 15px;\\n        right: 3px;\\n        width: 22px; }\\n  .swal2-popup.swal2-toast.swal2-show {\\n    -webkit-animation: showSweetToast .5s;\\n            animation: showSweetToast .5s; }\\n  .swal2-popup.swal2-toast.swal2-hide {\\n    -webkit-animation: hideSweetToast .2s forwards;\\n            animation: hideSweetToast .2s forwards; }\\n  .swal2-popup.swal2-toast .swal2-animate-success-icon .swal2-success-line-tip {\\n    -webkit-animation: animate-toast-success-tip .75s;\\n            animation: animate-toast-success-tip .75s; }\\n  .swal2-popup.swal2-toast .swal2-animate-success-icon .swal2-success-line-long {\\n    -webkit-animation: animate-toast-success-long .75s;\\n            animation: animate-toast-success-long .75s; }\\n\\n@-webkit-keyframes showSweetToast {\\n  0% {\\n    -webkit-transform: translateY(-10px) rotateZ(2deg);\\n            transform: translateY(-10px) rotateZ(2deg);\\n    opacity: 0; }\\n  33% {\\n    -webkit-transform: translateY(0) rotateZ(-2deg);\\n            transform: translateY(0) rotateZ(-2deg);\\n    opacity: .5; }\\n  66% {\\n    -webkit-transform: translateY(5px) rotateZ(2deg);\\n            transform: translateY(5px) rotateZ(2deg);\\n    opacity: .7; }\\n  100% {\\n    -webkit-transform: translateY(0) rotateZ(0);\\n            transform: translateY(0) rotateZ(0);\\n    opacity: 1; } }\\n\\n@keyframes showSweetToast {\\n  0% {\\n    -webkit-transform: translateY(-10px) rotateZ(2deg);\\n            transform: translateY(-10px) rotateZ(2deg);\\n    opacity: 0; }\\n  33% {\\n    -webkit-transform: translateY(0) rotateZ(-2deg);\\n            transform: translateY(0) rotateZ(-2deg);\\n    opacity: .5; }\\n  66% {\\n    -webkit-transform: translateY(5px) rotateZ(2deg);\\n            transform: translateY(5px) rotateZ(2deg);\\n    opacity: .7; }\\n  100% {\\n    -webkit-transform: translateY(0) rotateZ(0);\\n            transform: translateY(0) rotateZ(0);\\n    opacity: 1; } }\\n\\n@-webkit-keyframes hideSweetToast {\\n  0% {\\n    opacity: 1; }\\n  33% {\\n    opacity: .5; }\\n  100% {\\n    -webkit-transform: rotateZ(1deg);\\n            transform: rotateZ(1deg);\\n    opacity: 0; } }\\n\\n@keyframes hideSweetToast {\\n  0% {\\n    opacity: 1; }\\n  33% {\\n    opacity: .5; }\\n  100% {\\n    -webkit-transform: rotateZ(1deg);\\n            transform: rotateZ(1deg);\\n    opacity: 0; } }\\n\\n@-webkit-keyframes animate-toast-success-tip {\\n  0% {\\n    top: 9px;\\n    left: 1px;\\n    width: 0; }\\n  54% {\\n    top: 2px;\\n    left: 2px;\\n    width: 0; }\\n  70% {\\n    top: 10px;\\n    left: -4px;\\n    width: 26px; }\\n  84% {\\n    top: 17px;\\n    left: 12px;\\n    width: 8px; }\\n  100% {\\n    top: 18px;\\n    left: 3px;\\n    width: 12px; } }\\n\\n@keyframes animate-toast-success-tip {\\n  0% {\\n    top: 9px;\\n    left: 1px;\\n    width: 0; }\\n  54% {\\n    top: 2px;\\n    left: 2px;\\n    width: 0; }\\n  70% {\\n    top: 10px;\\n    left: -4px;\\n    width: 26px; }\\n  84% {\\n    top: 17px;\\n    left: 12px;\\n    width: 8px; }\\n  100% {\\n    top: 18px;\\n    left: 3px;\\n    width: 12px; } }\\n\\n@-webkit-keyframes animate-toast-success-long {\\n  0% {\\n    top: 26px;\\n    right: 22px;\\n    width: 0; }\\n  65% {\\n    top: 20px;\\n    right: 15px;\\n    width: 0; }\\n  84% {\\n    top: 15px;\\n    right: 0;\\n    width: 18px; }\\n  100% {\\n    top: 15px;\\n    right: 3px;\\n    width: 22px; } }\\n\\n@keyframes animate-toast-success-long {\\n  0% {\\n    top: 26px;\\n    right: 22px;\\n    width: 0; }\\n  65% {\\n    top: 20px;\\n    right: 15px;\\n    width: 0; }\\n  84% {\\n    top: 15px;\\n    right: 0;\\n    width: 18px; }\\n  100% {\\n    top: 15px;\\n    right: 3px;\\n    width: 22px; } }\\n\\nhtml.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown),\\nbody.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) {\\n  height: auto;\\n  overflow-y: hidden; }\\n\\nbody.swal2-no-backdrop .swal2-shown {\\n  top: auto;\\n  right: auto;\\n  bottom: auto;\\n  left: auto;\\n  background-color: transparent; }\\n  body.swal2-no-backdrop .swal2-shown > .swal2-modal {\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.4); }\\n  body.swal2-no-backdrop .swal2-shown.swal2-top {\\n    top: 0;\\n    left: 50%;\\n    -webkit-transform: translateX(-50%);\\n            transform: translateX(-50%); }\\n  body.swal2-no-backdrop .swal2-shown.swal2-top-start, body.swal2-no-backdrop .swal2-shown.swal2-top-left {\\n    top: 0;\\n    left: 0; }\\n  body.swal2-no-backdrop .swal2-shown.swal2-top-end, body.swal2-no-backdrop .swal2-shown.swal2-top-right {\\n    top: 0;\\n    right: 0; }\\n  body.swal2-no-backdrop .swal2-shown.swal2-center {\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); }\\n  body.swal2-no-backdrop .swal2-shown.swal2-center-start, body.swal2-no-backdrop .swal2-shown.swal2-center-left {\\n    top: 50%;\\n    left: 0;\\n    -webkit-transform: translateY(-50%);\\n            transform: translateY(-50%); }\\n  body.swal2-no-backdrop .swal2-shown.swal2-center-end, body.swal2-no-backdrop .swal2-shown.swal2-center-right {\\n    top: 50%;\\n    right: 0;\\n    -webkit-transform: translateY(-50%);\\n            transform: translateY(-50%); }\\n  body.swal2-no-backdrop .swal2-shown.swal2-bottom {\\n    bottom: 0;\\n    left: 50%;\\n    -webkit-transform: translateX(-50%);\\n            transform: translateX(-50%); }\\n  body.swal2-no-backdrop .swal2-shown.swal2-bottom-start, body.swal2-no-backdrop .swal2-shown.swal2-bottom-left {\\n    bottom: 0;\\n    left: 0; }\\n  body.swal2-no-backdrop .swal2-shown.swal2-bottom-end, body.swal2-no-backdrop .swal2-shown.swal2-bottom-right {\\n    right: 0;\\n    bottom: 0; }\\n\\n.swal2-container {\\n  display: flex;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 10px;\\n  background-color: transparent;\\n  z-index: 1060;\\n  overflow-x: hidden;\\n  -webkit-overflow-scrolling: touch; }\\n  .swal2-container.swal2-top {\\n    align-items: flex-start; }\\n  .swal2-container.swal2-top-start, .swal2-container.swal2-top-left {\\n    align-items: flex-start;\\n    justify-content: flex-start; }\\n  .swal2-container.swal2-top-end, .swal2-container.swal2-top-right {\\n    align-items: flex-start;\\n    justify-content: flex-end; }\\n  .swal2-container.swal2-center {\\n    align-items: center; }\\n  .swal2-container.swal2-center-start, .swal2-container.swal2-center-left {\\n    align-items: center;\\n    justify-content: flex-start; }\\n  .swal2-container.swal2-center-end, .swal2-container.swal2-center-right {\\n    align-items: center;\\n    justify-content: flex-end; }\\n  .swal2-container.swal2-bottom {\\n    align-items: flex-end; }\\n  .swal2-container.swal2-bottom-start, .swal2-container.swal2-bottom-left {\\n    align-items: flex-end;\\n    justify-content: flex-start; }\\n  .swal2-container.swal2-bottom-end, .swal2-container.swal2-bottom-right {\\n    align-items: flex-end;\\n    justify-content: flex-end; }\\n  .swal2-container.swal2-grow-fullscreen > .swal2-modal {\\n    display: flex !important;\\n    flex: 1;\\n    align-self: stretch;\\n    justify-content: center; }\\n  .swal2-container.swal2-grow-row > .swal2-modal {\\n    display: flex !important;\\n    flex: 1;\\n    align-content: center;\\n    justify-content: center; }\\n  .swal2-container.swal2-grow-column {\\n    flex: 1;\\n    flex-direction: column; }\\n    .swal2-container.swal2-grow-column.swal2-top, .swal2-container.swal2-grow-column.swal2-center, .swal2-container.swal2-grow-column.swal2-bottom {\\n      align-items: center; }\\n    .swal2-container.swal2-grow-column.swal2-top-start, .swal2-container.swal2-grow-column.swal2-center-start, .swal2-container.swal2-grow-column.swal2-bottom-start, .swal2-container.swal2-grow-column.swal2-top-left, .swal2-container.swal2-grow-column.swal2-center-left, .swal2-container.swal2-grow-column.swal2-bottom-left {\\n      align-items: flex-start; }\\n    .swal2-container.swal2-grow-column.swal2-top-end, .swal2-container.swal2-grow-column.swal2-center-end, .swal2-container.swal2-grow-column.swal2-bottom-end, .swal2-container.swal2-grow-column.swal2-top-right, .swal2-container.swal2-grow-column.swal2-center-right, .swal2-container.swal2-grow-column.swal2-bottom-right {\\n      align-items: flex-end; }\\n    .swal2-container.swal2-grow-column > .swal2-modal {\\n      display: flex !important;\\n      flex: 1;\\n      align-content: center;\\n      justify-content: center; }\\n  .swal2-container:not(.swal2-top):not(.swal2-top-start):not(.swal2-top-end):not(.swal2-top-left):not(.swal2-top-right):not(.swal2-center-start):not(.swal2-center-end):not(.swal2-center-left):not(.swal2-center-right):not(.swal2-bottom):not(.swal2-bottom-start):not(.swal2-bottom-end):not(.swal2-bottom-left):not(.swal2-bottom-right) > .swal2-modal {\\n    margin: auto; }\\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n    .swal2-container .swal2-modal {\\n      margin: 0 !important; } }\\n  .swal2-container.swal2-fade {\\n    transition: background-color .1s; }\\n  .swal2-container.swal2-shown {\\n    background-color: rgba(0, 0, 0, 0.4); }\\n\\n.swal2-popup {\\n  display: none;\\n  position: relative;\\n  flex-direction: column;\\n  justify-content: center;\\n  width: 32em;\\n  max-width: 100%;\\n  padding: 1.25em;\\n  border-radius: 0.3125em;\\n  background: #fff;\\n  font-family: inherit;\\n  font-size: 1rem;\\n  box-sizing: border-box; }\\n  .swal2-popup:focus {\\n    outline: none; }\\n  .swal2-popup.swal2-loading {\\n    overflow-y: hidden; }\\n  .swal2-popup .swal2-header {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center; }\\n  .swal2-popup .swal2-title {\\n    display: block;\\n    position: relative;\\n    max-width: 100%;\\n    margin: 0 0 0.4em;\\n    padding: 0;\\n    color: #595959;\\n    font-size: 1.875em;\\n    font-weight: 600;\\n    text-align: center;\\n    text-transform: none;\\n    word-wrap: break-word; }\\n  .swal2-popup .swal2-actions {\\n    align-items: center;\\n    justify-content: center;\\n    margin: 1.25em auto 0; }\\n    .swal2-popup .swal2-actions:not(.swal2-loading) .swal2-styled[disabled] {\\n      opacity: .4; }\\n    .swal2-popup .swal2-actions:not(.swal2-loading) .swal2-styled:hover {\\n      background-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)); }\\n    .swal2-popup .swal2-actions:not(.swal2-loading) .swal2-styled:active {\\n      background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)); }\\n    .swal2-popup .swal2-actions.swal2-loading .swal2-styled.swal2-confirm {\\n      width: 2.5em;\\n      height: 2.5em;\\n      margin: .46875em;\\n      padding: 0;\\n      border: .25em solid transparent;\\n      border-radius: 100%;\\n      border-color: transparent;\\n      background-color: transparent !important;\\n      color: transparent;\\n      cursor: default;\\n      box-sizing: border-box;\\n      -webkit-animation: swal2-rotate-loading 1.5s linear 0s infinite normal;\\n              animation: swal2-rotate-loading 1.5s linear 0s infinite normal;\\n      -webkit-user-select: none;\\n         -moz-user-select: none;\\n          -ms-user-select: none;\\n              user-select: none; }\\n    .swal2-popup .swal2-actions.swal2-loading .swal2-styled.swal2-cancel {\\n      margin-right: 30px;\\n      margin-left: 30px; }\\n    .swal2-popup .swal2-actions.swal2-loading :not(.swal2-styled).swal2-confirm::after {\\n      display: inline-block;\\n      width: 15px;\\n      height: 15px;\\n      margin-left: 5px;\\n      border: 3px solid #999999;\\n      border-radius: 50%;\\n      border-right-color: transparent;\\n      box-shadow: 1px 1px 1px #fff;\\n      content: '';\\n      -webkit-animation: swal2-rotate-loading 1.5s linear 0s infinite normal;\\n              animation: swal2-rotate-loading 1.5s linear 0s infinite normal; }\\n  .swal2-popup .swal2-styled {\\n    margin: 0 .3125em;\\n    padding: .625em 2em;\\n    font-weight: 500;\\n    box-shadow: none; }\\n    .swal2-popup .swal2-styled:not([disabled]) {\\n      cursor: pointer; }\\n    .swal2-popup .swal2-styled.swal2-confirm {\\n      border: 0;\\n      border-radius: 0.25em;\\n      background-color: #3085d6;\\n      color: #fff;\\n      font-size: 1.0625em; }\\n    .swal2-popup .swal2-styled.swal2-cancel {\\n      border: 0;\\n      border-radius: 0.25em;\\n      background-color: #aaa;\\n      color: #fff;\\n      font-size: 1.0625em; }\\n    .swal2-popup .swal2-styled:focus {\\n      outline: none;\\n      box-shadow: 0 0 0 2px #fff, 0 0 0 4px rgba(50, 100, 150, 0.4); }\\n    .swal2-popup .swal2-styled::-moz-focus-inner {\\n      border: 0; }\\n  .swal2-popup .swal2-footer {\\n    justify-content: center;\\n    margin: 1.25em 0 0;\\n    padding-top: 1em;\\n    border-top: 1px solid #eee;\\n    color: #545454;\\n    font-size: 1em; }\\n  .swal2-popup .swal2-image {\\n    max-width: 100%;\\n    margin: 1.25em auto; }\\n  .swal2-popup .swal2-close {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    justify-content: center;\\n    width: 1.2em;\\n    min-width: 1.2em;\\n    height: 1.2em;\\n    margin: 0;\\n    padding: 0;\\n    transition: color 0.1s ease-out;\\n    border: none;\\n    border-radius: 0;\\n    background: transparent;\\n    color: #cccccc;\\n    font-family: serif;\\n    font-size: calc(2.5em - 0.25em);\\n    line-height: 1.2em;\\n    cursor: pointer; }\\n    .swal2-popup .swal2-close:hover {\\n      -webkit-transform: none;\\n              transform: none;\\n      color: #f27474; }\\n  .swal2-popup > .swal2-input,\\n  .swal2-popup > .swal2-file,\\n  .swal2-popup > .swal2-textarea,\\n  .swal2-popup > .swal2-select,\\n  .swal2-popup > .swal2-radio,\\n  .swal2-popup > .swal2-checkbox {\\n    display: none; }\\n  .swal2-popup .swal2-content {\\n    justify-content: center;\\n    margin: 0;\\n    padding: 0;\\n    color: #545454;\\n    font-size: 1.125em;\\n    font-weight: 300;\\n    line-height: normal;\\n    word-wrap: break-word; }\\n  .swal2-popup #swal2-content {\\n    text-align: center; }\\n  .swal2-popup .swal2-input,\\n  .swal2-popup .swal2-file,\\n  .swal2-popup .swal2-textarea,\\n  .swal2-popup .swal2-select,\\n  .swal2-popup .swal2-radio,\\n  .swal2-popup .swal2-checkbox {\\n    margin: 1em auto; }\\n  .swal2-popup .swal2-input,\\n  .swal2-popup .swal2-file,\\n  .swal2-popup .swal2-textarea {\\n    width: 100%;\\n    transition: border-color .3s, box-shadow .3s;\\n    border: 1px solid #d9d9d9;\\n    border-radius: 0.1875em;\\n    font-size: 1.125em;\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.06);\\n    box-sizing: border-box; }\\n    .swal2-popup .swal2-input.swal2-inputerror,\\n    .swal2-popup .swal2-file.swal2-inputerror,\\n    .swal2-popup .swal2-textarea.swal2-inputerror {\\n      border-color: #f27474 !important;\\n      box-shadow: 0 0 2px #f27474 !important; }\\n    .swal2-popup .swal2-input:focus,\\n    .swal2-popup .swal2-file:focus,\\n    .swal2-popup .swal2-textarea:focus {\\n      border: 1px solid #b4dbed;\\n      outline: none;\\n      box-shadow: 0 0 3px #c4e6f5; }\\n    .swal2-popup .swal2-input::-webkit-input-placeholder,\\n    .swal2-popup .swal2-file::-webkit-input-placeholder,\\n    .swal2-popup .swal2-textarea::-webkit-input-placeholder {\\n      color: #cccccc; }\\n    .swal2-popup .swal2-input:-ms-input-placeholder,\\n    .swal2-popup .swal2-file:-ms-input-placeholder,\\n    .swal2-popup .swal2-textarea:-ms-input-placeholder {\\n      color: #cccccc; }\\n    .swal2-popup .swal2-input::-ms-input-placeholder,\\n    .swal2-popup .swal2-file::-ms-input-placeholder,\\n    .swal2-popup .swal2-textarea::-ms-input-placeholder {\\n      color: #cccccc; }\\n    .swal2-popup .swal2-input::placeholder,\\n    .swal2-popup .swal2-file::placeholder,\\n    .swal2-popup .swal2-textarea::placeholder {\\n      color: #cccccc; }\\n  .swal2-popup .swal2-range input {\\n    width: 80%; }\\n  .swal2-popup .swal2-range output {\\n    width: 20%;\\n    font-weight: 600;\\n    text-align: center; }\\n  .swal2-popup .swal2-range input,\\n  .swal2-popup .swal2-range output {\\n    height: 2.625em;\\n    margin: 1em auto;\\n    padding: 0;\\n    font-size: 1.125em;\\n    line-height: 2.625em; }\\n  .swal2-popup .swal2-input {\\n    height: 2.625em;\\n    padding: 0.75em; }\\n    .swal2-popup .swal2-input[type='number'] {\\n      max-width: 10em; }\\n  .swal2-popup .swal2-file {\\n    font-size: 1.125em; }\\n  .swal2-popup .swal2-textarea {\\n    height: 6.75em;\\n    padding: 0.75em; }\\n  .swal2-popup .swal2-select {\\n    min-width: 50%;\\n    max-width: 100%;\\n    padding: .375em .625em;\\n    color: #545454;\\n    font-size: 1.125em; }\\n  .swal2-popup .swal2-radio,\\n  .swal2-popup .swal2-checkbox {\\n    align-items: center;\\n    justify-content: center; }\\n    .swal2-popup .swal2-radio label,\\n    .swal2-popup .swal2-checkbox label {\\n      margin: 0 .6em;\\n      font-size: 1.125em; }\\n    .swal2-popup .swal2-radio input,\\n    .swal2-popup .swal2-checkbox input {\\n      margin: 0 .4em; }\\n  .swal2-popup .swal2-validationerror {\\n    display: none;\\n    align-items: center;\\n    justify-content: center;\\n    padding: 0.625em;\\n    background: #f0f0f0;\\n    color: #666666;\\n    font-size: 1em;\\n    font-weight: 300;\\n    overflow: hidden; }\\n    .swal2-popup .swal2-validationerror::before {\\n      display: inline-block;\\n      width: 1.5em;\\n      height: 1.5em;\\n      margin: 0 .625em;\\n      border-radius: 50%;\\n      background-color: #f27474;\\n      color: #fff;\\n      font-weight: 600;\\n      line-height: 1.5em;\\n      text-align: center;\\n      content: '!';\\n      zoom: normal; }\\n\\n@supports (-ms-accelerator: true) {\\n  .swal2-range input {\\n    width: 100% !important; }\\n  .swal2-range output {\\n    display: none; } }\\n\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  .swal2-range input {\\n    width: 100% !important; }\\n  .swal2-range output {\\n    display: none; } }\\n\\n.swal2-icon {\\n  position: relative;\\n  justify-content: center;\\n  width: 5rem;\\n  height: 5rem;\\n  margin: 1.25em auto 1.875em;\\n  border: .25rem solid transparent;\\n  border-radius: 50%;\\n  line-height: 5rem;\\n  cursor: default;\\n  box-sizing: content-box;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  zoom: normal; }\\n  .swal2-icon.swal2-error {\\n    border-color: #f27474; }\\n    .swal2-icon.swal2-error .swal2-x-mark {\\n      position: relative;\\n      flex-grow: 1; }\\n    .swal2-icon.swal2-error [class^='swal2-x-mark-line'] {\\n      display: block;\\n      position: absolute;\\n      top: 2.3125em;\\n      width: 2.9375em;\\n      height: .3125em;\\n      border-radius: .125em;\\n      background-color: #f27474; }\\n      .swal2-icon.swal2-error [class^='swal2-x-mark-line'][class$='left'] {\\n        left: 1.0625em;\\n        -webkit-transform: rotate(45deg);\\n                transform: rotate(45deg); }\\n      .swal2-icon.swal2-error [class^='swal2-x-mark-line'][class$='right'] {\\n        right: 1em;\\n        -webkit-transform: rotate(-45deg);\\n                transform: rotate(-45deg); }\\n  .swal2-icon.swal2-warning, .swal2-icon.swal2-info, .swal2-icon.swal2-question {\\n    margin: .333333em auto .5em;\\n    font-family: inherit;\\n    font-size: 3.75em; }\\n  .swal2-icon.swal2-warning {\\n    border-color: #facea8;\\n    color: #f8bb86; }\\n  .swal2-icon.swal2-info {\\n    border-color: #9de0f6;\\n    color: #3fc3ee; }\\n  .swal2-icon.swal2-question {\\n    border-color: #c9dae1;\\n    color: #87adbd; }\\n  .swal2-icon.swal2-success {\\n    border-color: #a5dc86; }\\n    .swal2-icon.swal2-success [class^='swal2-success-circular-line'] {\\n      position: absolute;\\n      width: 3.75em;\\n      height: 7.5em;\\n      -webkit-transform: rotate(45deg);\\n              transform: rotate(45deg);\\n      border-radius: 50%; }\\n      .swal2-icon.swal2-success [class^='swal2-success-circular-line'][class$='left'] {\\n        top: -.4375em;\\n        left: -2.0635em;\\n        -webkit-transform: rotate(-45deg);\\n                transform: rotate(-45deg);\\n        -webkit-transform-origin: 3.75em 3.75em;\\n                transform-origin: 3.75em 3.75em;\\n        border-radius: 7.5em 0 0 7.5em; }\\n      .swal2-icon.swal2-success [class^='swal2-success-circular-line'][class$='right'] {\\n        top: -.6875em;\\n        left: 1.875em;\\n        -webkit-transform: rotate(-45deg);\\n                transform: rotate(-45deg);\\n        -webkit-transform-origin: 0 3.75em;\\n                transform-origin: 0 3.75em;\\n        border-radius: 0 7.5em 7.5em 0; }\\n    .swal2-icon.swal2-success .swal2-success-ring {\\n      position: absolute;\\n      top: -.25em;\\n      left: -.25em;\\n      width: 100%;\\n      height: 100%;\\n      border: 0.25em solid rgba(165, 220, 134, 0.3);\\n      border-radius: 50%;\\n      z-index: 2;\\n      box-sizing: content-box; }\\n    .swal2-icon.swal2-success .swal2-success-fix {\\n      position: absolute;\\n      top: .5em;\\n      left: 1.625em;\\n      width: .4375em;\\n      height: 5.625em;\\n      -webkit-transform: rotate(-45deg);\\n              transform: rotate(-45deg);\\n      z-index: 1; }\\n    .swal2-icon.swal2-success [class^='swal2-success-line'] {\\n      display: block;\\n      position: absolute;\\n      height: .3125em;\\n      border-radius: .125em;\\n      background-color: #a5dc86;\\n      z-index: 2; }\\n      .swal2-icon.swal2-success [class^='swal2-success-line'][class$='tip'] {\\n        top: 2.875em;\\n        left: .875em;\\n        width: 1.5625em;\\n        -webkit-transform: rotate(45deg);\\n                transform: rotate(45deg); }\\n      .swal2-icon.swal2-success [class^='swal2-success-line'][class$='long'] {\\n        top: 2.375em;\\n        right: .5em;\\n        width: 2.9375em;\\n        -webkit-transform: rotate(-45deg);\\n                transform: rotate(-45deg); }\\n\\n.swal2-progresssteps {\\n  align-items: center;\\n  margin: 0 0 1.25em;\\n  padding: 0;\\n  font-weight: 600; }\\n  .swal2-progresssteps li {\\n    display: inline-block;\\n    position: relative; }\\n  .swal2-progresssteps .swal2-progresscircle {\\n    width: 2em;\\n    height: 2em;\\n    border-radius: 2em;\\n    background: #3085d6;\\n    color: #fff;\\n    line-height: 2em;\\n    text-align: center;\\n    z-index: 20; }\\n    .swal2-progresssteps .swal2-progresscircle:first-child {\\n      margin-left: 0; }\\n    .swal2-progresssteps .swal2-progresscircle:last-child {\\n      margin-right: 0; }\\n    .swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep {\\n      background: #3085d6; }\\n      .swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep ~ .swal2-progresscircle {\\n        background: #add8e6; }\\n      .swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep ~ .swal2-progressline {\\n        background: #add8e6; }\\n  .swal2-progresssteps .swal2-progressline {\\n    width: 2.5em;\\n    height: .4em;\\n    margin: 0 -1px;\\n    background: #3085d6;\\n    z-index: 10; }\\n\\n[class^='swal2'] {\\n  -webkit-tap-highlight-color: transparent; }\\n\\n.swal2-show {\\n  -webkit-animation: swal2-show 0.3s;\\n          animation: swal2-show 0.3s; }\\n  .swal2-show.swal2-noanimation {\\n    -webkit-animation: none;\\n            animation: none; }\\n\\n.swal2-hide {\\n  -webkit-animation: swal2-hide 0.15s forwards;\\n          animation: swal2-hide 0.15s forwards; }\\n  .swal2-hide.swal2-noanimation {\\n    -webkit-animation: none;\\n            animation: none; }\\n\\n[dir='rtl'] .swal2-close {\\n  right: auto;\\n  left: 0; }\\n\\n.swal2-animate-success-icon .swal2-success-line-tip {\\n  -webkit-animation: swal2-animate-success-line-tip 0.75s;\\n          animation: swal2-animate-success-line-tip 0.75s; }\\n\\n.swal2-animate-success-icon .swal2-success-line-long {\\n  -webkit-animation: swal2-animate-success-line-long 0.75s;\\n          animation: swal2-animate-success-line-long 0.75s; }\\n\\n.swal2-animate-success-icon .swal2-success-circular-line-right {\\n  -webkit-animation: swal2-rotate-success-circular-line 4.25s ease-in;\\n          animation: swal2-rotate-success-circular-line 4.25s ease-in; }\\n\\n.swal2-animate-error-icon {\\n  -webkit-animation: swal2-animate-error-icon 0.5s;\\n          animation: swal2-animate-error-icon 0.5s; }\\n  .swal2-animate-error-icon .swal2-x-mark {\\n    -webkit-animation: swal2-animate-error-x-mark 0.5s;\\n            animation: swal2-animate-error-x-mark 0.5s; }\\n\\n@-webkit-keyframes swal2-rotate-loading {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\\n@keyframes swal2-rotate-loading {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\";\n\nvar defaultParams = {\n  title: '',\n  titleText: '',\n  text: '',\n  html: '',\n  footer: '',\n  type: null,\n  toast: false,\n  customClass: '',\n  target: 'body',\n  backdrop: true,\n  animation: true,\n  allowOutsideClick: true,\n  allowEscapeKey: true,\n  allowEnterKey: true,\n  showConfirmButton: true,\n  showCancelButton: false,\n  preConfirm: null,\n  confirmButtonText: 'OK',\n  confirmButtonAriaLabel: '',\n  confirmButtonColor: null,\n  confirmButtonClass: null,\n  cancelButtonText: 'Cancel',\n  cancelButtonAriaLabel: '',\n  cancelButtonColor: null,\n  cancelButtonClass: null,\n  buttonsStyling: true,\n  reverseButtons: false,\n  focusConfirm: true,\n  focusCancel: false,\n  showCloseButton: false,\n  closeButtonAriaLabel: 'Close this dialog',\n  showLoaderOnConfirm: false,\n  imageUrl: null,\n  imageWidth: null,\n  imageHeight: null,\n  imageAlt: '',\n  imageClass: null,\n  timer: null,\n  width: null,\n  padding: null,\n  background: null,\n  input: null,\n  inputPlaceholder: '',\n  inputValue: '',\n  inputOptions: {},\n  inputAutoTrim: true,\n  inputClass: null,\n  inputAttributes: {},\n  inputValidator: null,\n  grow: false,\n  position: 'center',\n  progressSteps: [],\n  currentProgressStep: null,\n  progressStepsDistance: null,\n  onBeforeOpen: null,\n  onOpen: null,\n  onClose: null,\n  useRejections: false,\n  expectRejections: false\n};\n\nvar deprecatedParams = ['useRejections', 'expectRejections'];\n\nvar swalPrefix = 'swal2-';\n\nvar prefix = function prefix(items) {\n  var result = {};\n  for (var i in items) {\n    result[items[i]] = swalPrefix + items[i];\n  }\n  return result;\n};\n\nvar swalClasses = prefix(['container', 'shown', 'iosfix', 'popup', 'modal', 'no-backdrop', 'toast', 'toast-shown', 'fade', 'show', 'hide', 'noanimation', 'close', 'title', 'header', 'content', 'actions', 'confirm', 'cancel', 'footer', 'icon', 'image', 'input', 'has-input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea', 'inputerror', 'validationerror', 'progresssteps', 'activeprogressstep', 'progresscircle', 'progressline', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen']);\n\nvar iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\n\nvar consolePrefix = 'SweetAlert2:';\n\n/**\n * Filter the unique values into a new array\n * @param arr\n */\nvar uniqueArray = function uniqueArray(arr) {\n  var result = [];\n  for (var i = 0; i < arr.length; i++) {\n    if (result.indexOf(arr[i]) === -1) {\n      result.push(arr[i]);\n    }\n  }\n  return result;\n};\n\n/**\n * Converts `inputOptions` into an array of `[value, label]`s\n * @param inputOptions\n */\nvar formatInputOptions = function formatInputOptions(inputOptions) {\n  var result = [];\n  if (inputOptions instanceof Map) {\n    inputOptions.forEach(function (value, key) {\n      result.push([key, value]);\n    });\n  } else {\n    Object.keys(inputOptions).forEach(function (key) {\n      result.push([key, inputOptions[key]]);\n    });\n  }\n  return result;\n};\n\n/**\n * Standardise console warnings\n * @param message\n */\nvar warn = function warn(message) {\n  console.warn(consolePrefix + ' ' + message);\n};\n\n/**\n * Standardise console errors\n * @param message\n */\nvar error = function error(message) {\n  console.error(consolePrefix + ' ' + message);\n};\n\n/**\n * Private global state for `warnOnce`\n * @type {Array}\n * @private\n */\nvar previousWarnOnceMessages = [];\n\n/**\n * Show a console warning, but only if it hasn't already been shown\n * @param message\n */\nvar warnOnce = function warnOnce(message) {\n  if (!(previousWarnOnceMessages.indexOf(message) !== -1)) {\n    previousWarnOnceMessages.push(message);\n    warn(message);\n  }\n};\n\n/**\n * If `arg` is a function, call it (with no arguments or context) and return the result.\n * Otherwise, just pass the value through\n * @param arg\n */\nvar callIfFunction = function callIfFunction(arg) {\n  return typeof arg === 'function' ? arg() : arg;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar popupParams = _extends({}, defaultParams);\nvar queue = [];\n\nvar previousWindowKeyDown = void 0,\n    windowOnkeydownOverridden = void 0;\n\n/**\n * Show relevant warnings for given params\n *\n * @param params\n */\nvar showWarningsForParams = function showWarningsForParams(params) {\n  for (var param in params) {\n    if (!sweetAlert.isValidParameter(param)) {\n      warn('Unknown parameter \"' + param + '\"');\n    }\n    if (sweetAlert.isDeprecatedParameter(param)) {\n      warnOnce('The parameter \"' + param + '\" is deprecated and will be removed in the next major release.');\n    }\n  }\n};\n\n/**\n * Set type, text and actions on popup\n *\n * @param params\n * @returns {boolean}\n */\nvar setParameters = function setParameters(params) {\n  // Determine if the custom target element is valid\n  if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n    warn('Target parameter is not valid, defaulting to \"body\"');\n    params.target = 'body';\n  }\n\n  var popup = void 0;\n  var oldPopup = getPopup();\n  var targetElement = typeof params.target === 'string' ? document.querySelector(params.target) : params.target;\n  // If the model target has changed, refresh the popup\n  if (oldPopup && targetElement && oldPopup.parentNode !== targetElement.parentNode) {\n    popup = init(params);\n  } else {\n    popup = oldPopup || init(params);\n  }\n\n  // Set popup width\n  if (params.width) {\n    popup.style.width = typeof params.width === 'number' ? params.width + 'px' : params.width;\n  }\n\n  // Set popup padding\n  if (params.padding) {\n    popup.style.padding = typeof params.padding === 'number' ? params.padding + 'px' : params.padding;\n  }\n\n  // Set popup background\n  if (params.background) {\n    popup.style.background = params.background;\n  }\n  var popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n  var successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n  for (var i = 0; i < successIconParts.length; i++) {\n    successIconParts[i].style.backgroundColor = popupBackgroundColor;\n  }\n\n  var container = getContainer();\n  var title = getTitle();\n  var content = getContent().querySelector('#' + swalClasses.content);\n  var actions = getActions();\n  var confirmButton = getConfirmButton();\n  var cancelButton = getCancelButton();\n  var closeButton = getCloseButton();\n  var footer = getFooter();\n\n  // Title\n  if (params.titleText) {\n    title.innerText = params.titleText;\n  } else if (params.title) {\n    title.innerHTML = params.title.split('\\n').join('<br />');\n  }\n\n  if (typeof params.backdrop === 'string') {\n    getContainer().style.background = params.backdrop;\n  } else if (!params.backdrop) {\n    addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n  }\n\n  // Content as HTML\n  if (params.html) {\n    parseHtmlToContainer(params.html, content);\n\n    // Content as plain text\n  } else if (params.text) {\n    content.textContent = params.text;\n    show(content);\n  } else {\n    hide(content);\n  }\n\n  // Position\n  if (params.position in swalClasses) {\n    addClass(container, swalClasses[params.position]);\n  } else {\n    warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n    addClass(container, swalClasses.center);\n  }\n\n  // Grow\n  if (params.grow && typeof params.grow === 'string') {\n    var growClass = 'grow-' + params.grow;\n    if (growClass in swalClasses) {\n      addClass(container, swalClasses[growClass]);\n    }\n  }\n\n  // Animation\n  if (typeof params.animation === 'function') {\n    params.animation = params.animation.call();\n  }\n\n  // Close button\n  if (params.showCloseButton) {\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);\n    show(closeButton);\n  } else {\n    hide(closeButton);\n  }\n\n  // Default Class\n  popup.className = swalClasses.popup;\n  if (params.toast) {\n    addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n    addClass(popup, swalClasses.toast);\n  } else {\n    addClass(popup, swalClasses.modal);\n  }\n\n  // Custom Class\n  if (params.customClass) {\n    addClass(popup, params.customClass);\n  }\n\n  // Progress steps\n  var progressStepsContainer = getProgressSteps();\n  var currentProgressStep = parseInt(params.currentProgressStep === null ? sweetAlert.getQueueStep() : params.currentProgressStep, 10);\n  if (params.progressSteps && params.progressSteps.length) {\n    show(progressStepsContainer);\n    empty(progressStepsContainer);\n    if (currentProgressStep >= params.progressSteps.length) {\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n    params.progressSteps.forEach(function (step, index) {\n      var circle = document.createElement('li');\n      addClass(circle, swalClasses.progresscircle);\n      circle.innerHTML = step;\n      if (index === currentProgressStep) {\n        addClass(circle, swalClasses.activeprogressstep);\n      }\n      progressStepsContainer.appendChild(circle);\n      if (index !== params.progressSteps.length - 1) {\n        var line = document.createElement('li');\n        addClass(line, swalClasses.progressline);\n        if (params.progressStepsDistance) {\n          line.style.width = params.progressStepsDistance;\n        }\n        progressStepsContainer.appendChild(line);\n      }\n    });\n  } else {\n    hide(progressStepsContainer);\n  }\n\n  // Icon\n  var icons = getIcons();\n  for (var _i = 0; _i < icons.length; _i++) {\n    hide(icons[_i]);\n  }\n  if (params.type) {\n    var validType = false;\n    for (var iconType in iconTypes) {\n      if (params.type === iconType) {\n        validType = true;\n        break;\n      }\n    }\n    if (!validType) {\n      error('Unknown alert type: ' + params.type);\n      return false;\n    }\n    var icon = popup.querySelector('.' + swalClasses.icon + '.' + iconTypes[params.type]);\n    show(icon);\n\n    // Animate icon\n    if (params.animation) {\n      addClass(icon, 'swal2-animate-' + params.type + '-icon');\n    }\n  }\n\n  // Custom image\n  var image = getImage();\n  if (params.imageUrl) {\n    image.setAttribute('src', params.imageUrl);\n    image.setAttribute('alt', params.imageAlt);\n    show(image);\n\n    if (params.imageWidth) {\n      image.setAttribute('width', params.imageWidth);\n    } else {\n      image.removeAttribute('width');\n    }\n\n    if (params.imageHeight) {\n      image.setAttribute('height', params.imageHeight);\n    } else {\n      image.removeAttribute('height');\n    }\n\n    image.className = swalClasses.image;\n    if (params.imageClass) {\n      addClass(image, params.imageClass);\n    }\n  } else {\n    hide(image);\n  }\n\n  // Cancel button\n  if (params.showCancelButton) {\n    cancelButton.style.display = 'inline-block';\n  } else {\n    hide(cancelButton);\n  }\n\n  // Confirm button\n  if (params.showConfirmButton) {\n    removeStyleProperty(confirmButton, 'display');\n  } else {\n    hide(confirmButton);\n  }\n\n  // Actions (buttons) wrapper\n  if (!params.showConfirmButton && !params.showCancelButton) {\n    hide(actions);\n  } else {\n    show(actions);\n  }\n\n  // Edit text on confirm and cancel buttons\n  confirmButton.innerHTML = params.confirmButtonText;\n  cancelButton.innerHTML = params.cancelButtonText;\n\n  // ARIA labels for confirm and cancel buttons\n  confirmButton.setAttribute('aria-label', params.confirmButtonAriaLabel);\n  cancelButton.setAttribute('aria-label', params.cancelButtonAriaLabel);\n\n  // Add buttons custom classes\n  confirmButton.className = swalClasses.confirm;\n  addClass(confirmButton, params.confirmButtonClass);\n  cancelButton.className = swalClasses.cancel;\n  addClass(cancelButton, params.cancelButtonClass);\n\n  // Buttons styling\n  if (params.buttonsStyling) {\n    addClass([confirmButton, cancelButton], swalClasses.styled);\n\n    // Buttons background colors\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n    }\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n    }\n\n    // Loading state\n    var confirmButtonBackgroundColor = window.getComputedStyle(confirmButton).getPropertyValue('background-color');\n    confirmButton.style.borderLeftColor = confirmButtonBackgroundColor;\n    confirmButton.style.borderRightColor = confirmButtonBackgroundColor;\n  } else {\n    removeClass([confirmButton, cancelButton], swalClasses.styled);\n\n    confirmButton.style.backgroundColor = confirmButton.style.borderLeftColor = confirmButton.style.borderRightColor = '';\n    cancelButton.style.backgroundColor = cancelButton.style.borderLeftColor = cancelButton.style.borderRightColor = '';\n  }\n\n  // Footer\n  parseHtmlToContainer(params.footer, footer);\n\n  // CSS animation\n  if (params.animation === true) {\n    removeClass(popup, swalClasses.noanimation);\n  } else {\n    addClass(popup, swalClasses.noanimation);\n  }\n\n  // showLoaderOnConfirm && preConfirm\n  if (params.showLoaderOnConfirm && !params.preConfirm) {\n    warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n  }\n};\n\n/**\n * Animations\n *\n * @param animation\n * @param onBeforeOpen\n * @param onComplete\n */\nvar openPopup = function openPopup(animation, onBeforeOpen, onComplete) {\n  var container = getContainer();\n  var popup = getPopup();\n\n  if (onBeforeOpen !== null && typeof onBeforeOpen === 'function') {\n    onBeforeOpen(popup);\n  }\n\n  if (animation) {\n    addClass(popup, swalClasses.show);\n    addClass(container, swalClasses.fade);\n    removeClass(popup, swalClasses.hide);\n  } else {\n    removeClass(popup, swalClasses.fade);\n  }\n  show(popup);\n\n  // scrolling is 'hidden' until animation is done, after that 'auto'\n  container.style.overflowY = 'hidden';\n  if (animationEndEvent && !hasClass(popup, swalClasses.noanimation)) {\n    popup.addEventListener(animationEndEvent, function swalCloseEventFinished() {\n      popup.removeEventListener(animationEndEvent, swalCloseEventFinished);\n      container.style.overflowY = 'auto';\n    });\n  } else {\n    container.style.overflowY = 'auto';\n  }\n\n  addClass([document.documentElement, document.body, container], swalClasses.shown);\n  if (isModal()) {\n    fixScrollbar();\n    iOSfix();\n  }\n  states.previousActiveElement = document.activeElement;\n  if (onComplete !== null && typeof onComplete === 'function') {\n    setTimeout(function () {\n      onComplete(popup);\n    });\n  }\n};\n\nvar fixScrollbar = function fixScrollbar() {\n  // for queues, do not do this more than once\n  if (states.previousBodyPadding !== null) {\n    return;\n  }\n  // if the body has overflow\n  if (document.body.scrollHeight > window.innerHeight) {\n    // add padding so the content doesn't shift after removal of scrollbar\n    states.previousBodyPadding = document.body.style.paddingRight;\n    document.body.style.paddingRight = measureScrollbar() + 'px';\n  }\n};\n\nvar undoScrollbar = function undoScrollbar() {\n  if (states.previousBodyPadding !== null) {\n    document.body.style.paddingRight = states.previousBodyPadding;\n    states.previousBodyPadding = null;\n  }\n};\n\n// Fix iOS scrolling http://stackoverflow.com/q/39626302/1331425\nvar iOSfix = function iOSfix() {\n  var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n  if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n    var offset = document.body.scrollTop;\n    document.body.style.top = offset * -1 + 'px';\n    addClass(document.body, swalClasses.iosfix);\n  }\n};\n\nvar undoIOSfix = function undoIOSfix() {\n  if (hasClass(document.body, swalClasses.iosfix)) {\n    var offset = parseInt(document.body.style.top, 10);\n    removeClass(document.body, swalClasses.iosfix);\n    document.body.style.top = '';\n    document.body.scrollTop = offset * -1;\n  }\n};\n\n// SweetAlert entry point\nvar sweetAlert = function sweetAlert() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  // Prevent run in Node env\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  // Check for the existence of Promise\n  if (typeof Promise === 'undefined') {\n    error('This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)');\n  }\n\n  if (typeof args[0] === 'undefined') {\n    error('SweetAlert2 expects at least 1 attribute!');\n    return false;\n  }\n\n  var params = _extends({}, popupParams);\n\n  switch (_typeof(args[0])) {\n    case 'string':\n      params.title = args[0];\n      params.html = args[1];\n      params.type = args[2];\n\n      break;\n\n    case 'object':\n      showWarningsForParams(args[0]);\n      _extends(params, args[0]);\n      params.extraParams = args[0].extraParams;\n\n      if (params.input === 'email' && params.inputValidator === null) {\n        var inputValidator = function inputValidator(email) {\n          return new Promise(function (resolve, reject) {\n            var emailRegex = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/;\n            if (emailRegex.test(email)) {\n              resolve();\n            } else {\n              reject('Invalid email address');\n            }\n          });\n        };\n        params.inputValidator = params.expectRejections ? inputValidator : sweetAlert.adaptInputValidator(inputValidator);\n      }\n\n      if (params.input === 'url' && params.inputValidator === null) {\n        var _inputValidator = function _inputValidator(url) {\n          return new Promise(function (resolve, reject) {\n            // taken from https://stackoverflow.com/a/3809435/1331425\n            var urlRegex = /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)$/;\n            if (urlRegex.test(url)) {\n              resolve();\n            } else {\n              reject('Invalid URL');\n            }\n          });\n        };\n        params.inputValidator = params.expectRejections ? _inputValidator : sweetAlert.adaptInputValidator(_inputValidator);\n      }\n      break;\n\n    default:\n      error('Unexpected type of argument! Expected \"string\" or \"object\", got ' + _typeof(args[0]));\n      return false;\n  }\n\n  setParameters(params);\n\n  var container = getContainer();\n  var popup = getPopup();\n\n  return new Promise(function (resolve, reject) {\n    // functions to handle all resolving/rejecting/settling\n    var succeedWith = function succeedWith(value) {\n      sweetAlert.closePopup(params.onClose);\n      if (params.useRejections) {\n        resolve(value);\n      } else {\n        resolve({ value: value });\n      }\n    };\n    var dismissWith = function dismissWith(dismiss) {\n      sweetAlert.closePopup(params.onClose);\n      if (params.useRejections) {\n        reject(dismiss);\n      } else {\n        resolve({ dismiss: dismiss });\n      }\n    };\n    var errorWith = function errorWith(error$$1) {\n      sweetAlert.closePopup(params.onClose);\n      reject(error$$1);\n    };\n\n    // Close on timer\n    if (params.timer) {\n      popup.timeout = setTimeout(function () {\n        return dismissWith('timer');\n      }, params.timer);\n    }\n\n    // Get input element by specified type or, if type isn't specified, by params.input\n    var getInput = function getInput(inputType) {\n      inputType = inputType || params.input;\n      if (!inputType) {\n        return null;\n      }\n      switch (inputType) {\n        case 'select':\n        case 'textarea':\n        case 'file':\n          return getChildByClass(content, swalClasses[inputType]);\n        case 'checkbox':\n          return popup.querySelector('.' + swalClasses.checkbox + ' input');\n        case 'radio':\n          return popup.querySelector('.' + swalClasses.radio + ' input:checked') || popup.querySelector('.' + swalClasses.radio + ' input:first-child');\n        case 'range':\n          return popup.querySelector('.' + swalClasses.range + ' input');\n        default:\n          return getChildByClass(content, swalClasses.input);\n      }\n    };\n\n    // Get the value of the popup input\n    var getInputValue = function getInputValue() {\n      var input = getInput();\n      if (!input) {\n        return null;\n      }\n      switch (params.input) {\n        case 'checkbox':\n          return input.checked ? 1 : 0;\n        case 'radio':\n          return input.checked ? input.value : null;\n        case 'file':\n          return input.files.length ? input.files[0] : null;\n        default:\n          return params.inputAutoTrim ? input.value.trim() : input.value;\n      }\n    };\n\n    // input autofocus\n    if (params.input) {\n      setTimeout(function () {\n        var input = getInput();\n        if (input) {\n          focusInput(input);\n        }\n      }, 0);\n    }\n\n    var confirm = function confirm(value) {\n      if (params.showLoaderOnConfirm) {\n        sweetAlert.showLoading();\n      }\n\n      if (params.preConfirm) {\n        sweetAlert.resetValidationError();\n        var preConfirmPromise = Promise.resolve().then(function () {\n          return params.preConfirm(value, params.extraParams);\n        });\n        if (params.expectRejections) {\n          preConfirmPromise.then(function (preConfirmValue) {\n            return succeedWith(preConfirmValue || value);\n          }, function (validationError) {\n            sweetAlert.hideLoading();\n            if (validationError) {\n              sweetAlert.showValidationError(validationError);\n            }\n          });\n        } else {\n          preConfirmPromise.then(function (preConfirmValue) {\n            if (isVisible(getValidationError()) || preConfirmValue === false) {\n              sweetAlert.hideLoading();\n            } else {\n              succeedWith(preConfirmValue || value);\n            }\n          }, function (error$$1) {\n            return errorWith(error$$1);\n          });\n        }\n      } else {\n        succeedWith(value);\n      }\n    };\n\n    // Mouse interactions\n    var onButtonEvent = function onButtonEvent(event) {\n      var e = event || window.event;\n      var target = e.target || e.srcElement;\n      var confirmButton = getConfirmButton();\n      var cancelButton = getCancelButton();\n      var targetedConfirm = confirmButton && (confirmButton === target || confirmButton.contains(target));\n      var targetedCancel = cancelButton && (cancelButton === target || cancelButton.contains(target));\n\n      switch (e.type) {\n        case 'click':\n          // Clicked 'confirm'\n          if (targetedConfirm && sweetAlert.isVisible()) {\n            sweetAlert.disableButtons();\n            if (params.input) {\n              var inputValue = getInputValue();\n\n              if (params.inputValidator) {\n                sweetAlert.disableInput();\n                var validationPromise = Promise.resolve().then(function () {\n                  return params.inputValidator(inputValue, params.extraParams);\n                });\n                if (params.expectRejections) {\n                  validationPromise.then(function () {\n                    sweetAlert.enableButtons();\n                    sweetAlert.enableInput();\n                    confirm(inputValue);\n                  }, function (validationError) {\n                    sweetAlert.enableButtons();\n                    sweetAlert.enableInput();\n                    if (validationError) {\n                      sweetAlert.showValidationError(validationError);\n                    }\n                  });\n                } else {\n                  validationPromise.then(function (validationError) {\n                    sweetAlert.enableButtons();\n                    sweetAlert.enableInput();\n                    if (validationError) {\n                      sweetAlert.showValidationError(validationError);\n                    } else {\n                      confirm(inputValue);\n                    }\n                  }, function (error$$1) {\n                    return errorWith(error$$1);\n                  });\n                }\n              } else {\n                confirm(inputValue);\n              }\n            } else {\n              confirm(true);\n            }\n\n            // Clicked 'cancel'\n          } else if (targetedCancel && sweetAlert.isVisible()) {\n            sweetAlert.disableButtons();\n            dismissWith(sweetAlert.DismissReason.cancel);\n          }\n          break;\n        default:\n      }\n    };\n\n    var buttons = popup.querySelectorAll('button');\n    for (var i = 0; i < buttons.length; i++) {\n      buttons[i].onclick = onButtonEvent;\n      buttons[i].onmouseover = onButtonEvent;\n      buttons[i].onmouseout = onButtonEvent;\n      buttons[i].onmousedown = onButtonEvent;\n    }\n\n    // Closing popup by close button\n    getCloseButton().onclick = function () {\n      dismissWith(sweetAlert.DismissReason.close);\n    };\n\n    if (params.toast) {\n      // Closing popup by backdrop click\n      popup.onclick = function (e) {\n        if (e.target !== popup || params.showConfirmButton || params.showCancelButton) {\n          return;\n        }\n        if (params.allowOutsideClick) {\n          sweetAlert.closePopup(params.onClose);\n          dismissWith(sweetAlert.DismissReason.backdrop);\n        }\n      };\n    } else {\n      var ignoreOutsideClick = false;\n\n      // Ignore click events that had mousedown on the popup but mouseup on the container\n      // This can happen when the user drags a slider\n      popup.onmousedown = function () {\n        container.onmouseup = function (e) {\n          container.onmouseup = undefined;\n          // We only check if the mouseup target is the container because usually it doesn't\n          // have any other direct children aside of the popup\n          if (e.target === container) {\n            ignoreOutsideClick = true;\n          }\n        };\n      };\n\n      // Ignore click events that had mousedown on the container but mouseup on the popup\n      container.onmousedown = function () {\n        popup.onmouseup = function (e) {\n          popup.onmouseup = undefined;\n          // We also need to check if the mouseup target is a child of the popup\n          if (e.target === popup || popup.contains(e.target)) {\n            ignoreOutsideClick = true;\n          }\n        };\n      };\n\n      container.onclick = function (e) {\n        if (ignoreOutsideClick) {\n          ignoreOutsideClick = false;\n          return;\n        }\n        if (e.target !== container) {\n          return;\n        }\n        if (callIfFunction(params.allowOutsideClick)) {\n          dismissWith(sweetAlert.DismissReason.backdrop);\n        }\n      };\n    }\n\n    var content = getContent();\n    var actions = getActions();\n    var confirmButton = getConfirmButton();\n    var cancelButton = getCancelButton();\n\n    // Reverse buttons (Confirm on the right side)\n    if (params.reverseButtons) {\n      confirmButton.parentNode.insertBefore(cancelButton, confirmButton);\n    } else {\n      confirmButton.parentNode.insertBefore(confirmButton, cancelButton);\n    }\n\n    // Focus handling\n    var setFocus = function setFocus(index, increment) {\n      var focusableElements = getFocusableElements(params.focusCancel);\n      // search for visible elements and select the next possible match\n      for (var _i2 = 0; _i2 < focusableElements.length; _i2++) {\n        index = index + increment;\n\n        // rollover to first item\n        if (index === focusableElements.length) {\n          index = 0;\n\n          // go to last item\n        } else if (index === -1) {\n          index = focusableElements.length - 1;\n        }\n\n        // determine if element is visible\n        var el = focusableElements[index];\n        if (isVisible(el)) {\n          return el.focus();\n        }\n      }\n    };\n\n    var handleKeyDown = function handleKeyDown(event) {\n      var e = event || window.event;\n\n      var arrowKeys = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Left', 'Right', 'Up', 'Down' // IE11\n      ];\n\n      if (e.key === 'Enter' && !e.isComposing) {\n        if (e.target === getInput()) {\n          if (['textarea', 'file'].indexOf(params.input) !== -1) {\n            return; // do not submit\n          }\n\n          sweetAlert.clickConfirm();\n          e.preventDefault();\n        }\n\n        // TAB\n      } else if (e.key === 'Tab') {\n        var targetElement = e.target || e.srcElement;\n\n        var focusableElements = getFocusableElements(params.focusCancel);\n        var btnIndex = -1; // Find the button - note, this is a nodelist, not an array.\n        for (var _i3 = 0; _i3 < focusableElements.length; _i3++) {\n          if (targetElement === focusableElements[_i3]) {\n            btnIndex = _i3;\n            break;\n          }\n        }\n\n        if (!e.shiftKey) {\n          // Cycle to the next button\n          setFocus(btnIndex, 1);\n        } else {\n          // Cycle to the prev button\n          setFocus(btnIndex, -1);\n        }\n        e.stopPropagation();\n        e.preventDefault();\n\n        // ARROWS - switch focus between buttons\n      } else if (arrowKeys.indexOf(e.key) !== -1) {\n        // focus Cancel button if Confirm button is currently focused\n        if (document.activeElement === confirmButton && isVisible(cancelButton)) {\n          cancelButton.focus();\n          // and vice versa\n        } else if (document.activeElement === cancelButton && isVisible(confirmButton)) {\n          confirmButton.focus();\n        }\n\n        // ESC\n      } else if ((e.key === 'Escape' || e.key === 'Esc') && callIfFunction(params.allowEscapeKey) === true) {\n        dismissWith(sweetAlert.DismissReason.esc);\n      }\n    };\n\n    if (params.toast && windowOnkeydownOverridden) {\n      window.onkeydown = previousWindowKeyDown;\n      windowOnkeydownOverridden = false;\n    }\n\n    if (!params.toast && !windowOnkeydownOverridden) {\n      previousWindowKeyDown = window.onkeydown;\n      windowOnkeydownOverridden = true;\n      window.onkeydown = handleKeyDown;\n    }\n\n    /**\n     * Show spinner instead of Confirm button and disable Cancel button\n     */\n    sweetAlert.hideLoading = sweetAlert.disableLoading = function () {\n      if (!params.showConfirmButton) {\n        hide(confirmButton);\n        if (!params.showCancelButton) {\n          hide(getActions());\n        }\n      }\n      removeClass([popup, actions], swalClasses.loading);\n      popup.removeAttribute('aria-busy');\n      popup.removeAttribute('data-loading');\n      confirmButton.disabled = false;\n      cancelButton.disabled = false;\n    };\n\n    sweetAlert.getTitle = function () {\n      return getTitle();\n    };\n    sweetAlert.getContent = function () {\n      return getContent();\n    };\n    sweetAlert.getInput = function () {\n      return getInput();\n    };\n    sweetAlert.getImage = function () {\n      return getImage();\n    };\n    sweetAlert.getButtonsWrapper = function () {\n      return getButtonsWrapper();\n    };\n    sweetAlert.getActions = function () {\n      return getActions();\n    };\n    sweetAlert.getConfirmButton = function () {\n      return getConfirmButton();\n    };\n    sweetAlert.getCancelButton = function () {\n      return getCancelButton();\n    };\n    sweetAlert.getFooter = function () {\n      return getFooter();\n    };\n    sweetAlert.isLoading = function () {\n      return isLoading();\n    };\n\n    sweetAlert.enableButtons = function () {\n      confirmButton.disabled = false;\n      cancelButton.disabled = false;\n    };\n\n    sweetAlert.disableButtons = function () {\n      confirmButton.disabled = true;\n      cancelButton.disabled = true;\n    };\n\n    sweetAlert.enableConfirmButton = function () {\n      confirmButton.disabled = false;\n    };\n\n    sweetAlert.disableConfirmButton = function () {\n      confirmButton.disabled = true;\n    };\n\n    sweetAlert.enableInput = function () {\n      var input = getInput();\n      if (!input) {\n        return false;\n      }\n      if (input.type === 'radio') {\n        var radiosContainer = input.parentNode.parentNode;\n        var radios = radiosContainer.querySelectorAll('input');\n        for (var _i4 = 0; _i4 < radios.length; _i4++) {\n          radios[_i4].disabled = false;\n        }\n      } else {\n        input.disabled = false;\n      }\n    };\n\n    sweetAlert.disableInput = function () {\n      var input = getInput();\n      if (!input) {\n        return false;\n      }\n      if (input && input.type === 'radio') {\n        var radiosContainer = input.parentNode.parentNode;\n        var radios = radiosContainer.querySelectorAll('input');\n        for (var _i5 = 0; _i5 < radios.length; _i5++) {\n          radios[_i5].disabled = true;\n        }\n      } else {\n        input.disabled = true;\n      }\n    };\n\n    // Show block with validation error\n    sweetAlert.showValidationError = function (error$$1) {\n      var validationError = getValidationError();\n      validationError.innerHTML = error$$1;\n      var popupComputedStyle = window.getComputedStyle(popup);\n      validationError.style.marginLeft = '-' + popupComputedStyle.getPropertyValue('padding-left');\n      validationError.style.marginRight = '-' + popupComputedStyle.getPropertyValue('padding-right');\n      show(validationError);\n\n      var input = getInput();\n      if (input) {\n        input.setAttribute('aria-invalid', true);\n        input.setAttribute('aria-describedBy', swalClasses.validationerror);\n        focusInput(input);\n        addClass(input, swalClasses.inputerror);\n      }\n    };\n\n    // Hide block with validation error\n    sweetAlert.resetValidationError = function () {\n      var validationError = getValidationError();\n      if (validationError) {\n        hide(validationError);\n      }\n\n      var input = getInput();\n      if (input) {\n        input.removeAttribute('aria-invalid');\n        input.removeAttribute('aria-describedBy');\n        removeClass(input, swalClasses.inputerror);\n      }\n    };\n\n    sweetAlert.getProgressSteps = function () {\n      return params.progressSteps;\n    };\n\n    sweetAlert.setProgressSteps = function (progressSteps) {\n      params.progressSteps = progressSteps;\n      setParameters(params);\n    };\n\n    sweetAlert.showProgressSteps = function () {\n      show(getProgressSteps());\n    };\n\n    sweetAlert.hideProgressSteps = function () {\n      hide(getProgressSteps());\n    };\n\n    sweetAlert.enableButtons();\n    sweetAlert.hideLoading();\n    sweetAlert.resetValidationError();\n\n    if (params.input) {\n      addClass(document.body, swalClasses['has-input']);\n    }\n\n    // inputs\n    var inputTypes = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n    var input = void 0;\n    for (var _i6 = 0; _i6 < inputTypes.length; _i6++) {\n      var inputClass = swalClasses[inputTypes[_i6]];\n      var inputContainer = getChildByClass(content, inputClass);\n      input = getInput(inputTypes[_i6]);\n\n      // set attributes\n      if (input) {\n        for (var j in input.attributes) {\n          if (input.attributes.hasOwnProperty(j)) {\n            var attrName = input.attributes[j].name;\n            if (attrName !== 'type' && attrName !== 'value') {\n              input.removeAttribute(attrName);\n            }\n          }\n        }\n        for (var attr in params.inputAttributes) {\n          input.setAttribute(attr, params.inputAttributes[attr]);\n        }\n      }\n\n      // set class\n      inputContainer.className = inputClass;\n      if (params.inputClass) {\n        addClass(inputContainer, params.inputClass);\n      }\n\n      hide(inputContainer);\n    }\n\n    var populateInputOptions = void 0;\n    switch (params.input) {\n      case 'text':\n      case 'email':\n      case 'password':\n      case 'number':\n      case 'tel':\n      case 'url':\n        input = getChildByClass(content, swalClasses.input);\n        input.value = params.inputValue;\n        input.placeholder = params.inputPlaceholder;\n        input.type = params.input;\n        show(input);\n        break;\n      case 'file':\n        input = getChildByClass(content, swalClasses.file);\n        input.placeholder = params.inputPlaceholder;\n        input.type = params.input;\n        show(input);\n        break;\n      case 'range':\n        var range = getChildByClass(content, swalClasses.range);\n        var rangeInput = range.querySelector('input');\n        var rangeOutput = range.querySelector('output');\n        rangeInput.value = params.inputValue;\n        rangeInput.type = params.input;\n        rangeOutput.value = params.inputValue;\n        show(range);\n        break;\n      case 'select':\n        var select = getChildByClass(content, swalClasses.select);\n        select.innerHTML = '';\n        if (params.inputPlaceholder) {\n          var placeholder = document.createElement('option');\n          placeholder.innerHTML = params.inputPlaceholder;\n          placeholder.value = '';\n          placeholder.disabled = true;\n          placeholder.selected = true;\n          select.appendChild(placeholder);\n        }\n        populateInputOptions = function populateInputOptions(inputOptions) {\n          inputOptions.forEach(function (_ref) {\n            var _ref2 = slicedToArray(_ref, 2),\n                optionValue = _ref2[0],\n                optionLabel = _ref2[1];\n\n            var option = document.createElement('option');\n            option.value = optionValue;\n            option.innerHTML = optionLabel;\n            if (params.inputValue.toString() === optionValue.toString()) {\n              option.selected = true;\n            }\n            select.appendChild(option);\n          });\n          show(select);\n          select.focus();\n        };\n        break;\n      case 'radio':\n        var radio = getChildByClass(content, swalClasses.radio);\n        radio.innerHTML = '';\n        populateInputOptions = function populateInputOptions(inputOptions) {\n          inputOptions.forEach(function (_ref3) {\n            var _ref4 = slicedToArray(_ref3, 2),\n                radioValue = _ref4[0],\n                radioLabel = _ref4[1];\n\n            var radioInput = document.createElement('input');\n            var radioLabelElement = document.createElement('label');\n            radioInput.type = 'radio';\n            radioInput.name = swalClasses.radio;\n            radioInput.value = radioValue;\n            if (params.inputValue.toString() === radioValue.toString()) {\n              radioInput.checked = true;\n            }\n            radioLabelElement.innerHTML = radioLabel;\n            radioLabelElement.insertBefore(radioInput, radioLabelElement.firstChild);\n            radio.appendChild(radioLabelElement);\n          });\n          show(radio);\n          var radios = radio.querySelectorAll('input');\n          if (radios.length) {\n            radios[0].focus();\n          }\n        };\n        break;\n      case 'checkbox':\n        var checkbox = getChildByClass(content, swalClasses.checkbox);\n        var checkboxInput = getInput('checkbox');\n        checkboxInput.type = 'checkbox';\n        checkboxInput.value = 1;\n        checkboxInput.id = swalClasses.checkbox;\n        checkboxInput.checked = Boolean(params.inputValue);\n        var label = checkbox.getElementsByTagName('span');\n        if (label.length) {\n          checkbox.removeChild(label[0]);\n        }\n        label = document.createElement('span');\n        label.innerHTML = params.inputPlaceholder;\n        checkbox.appendChild(label);\n        show(checkbox);\n        break;\n      case 'textarea':\n        var textarea = getChildByClass(content, swalClasses.textarea);\n        textarea.value = params.inputValue;\n        textarea.placeholder = params.inputPlaceholder;\n        show(textarea);\n        break;\n      case null:\n        break;\n      default:\n        error('Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"' + params.input + '\"');\n        break;\n    }\n\n    if (params.input === 'select' || params.input === 'radio') {\n      var processInputOptions = function processInputOptions(inputOptions) {\n        return populateInputOptions(formatInputOptions(inputOptions));\n      };\n      if (params.inputOptions instanceof Promise) {\n        sweetAlert.showLoading();\n        params.inputOptions.then(function (inputOptions) {\n          sweetAlert.hideLoading();\n          processInputOptions(inputOptions);\n        });\n      } else if (_typeof(params.inputOptions) === 'object') {\n        processInputOptions(params.inputOptions);\n      } else {\n        error('Unexpected type of inputOptions! Expected object, Map or Promise, got ' + _typeof(params.inputOptions));\n      }\n    }\n\n    openPopup(params.animation, params.onBeforeOpen, params.onOpen);\n\n    if (!params.toast) {\n      if (!callIfFunction(params.allowEnterKey)) {\n        if (document.activeElement) {\n          document.activeElement.blur();\n        }\n      } else if (params.focusCancel && isVisible(cancelButton)) {\n        cancelButton.focus();\n      } else if (params.focusConfirm && isVisible(confirmButton)) {\n        confirmButton.focus();\n      } else {\n        setFocus(-1, 1);\n      }\n    }\n\n    // fix scroll\n    getContainer().scrollTop = 0;\n  });\n};\n\n/*\n * Global function to determine if swal2 popup is shown\n */\nsweetAlert.isVisible = function () {\n  return !!getPopup();\n};\n\n/*\n * Global function for chaining sweetAlert popups\n */\nsweetAlert.queue = function (steps) {\n  queue = steps;\n  var resetQueue = function resetQueue() {\n    queue = [];\n    document.body.removeAttribute('data-swal2-queue-step');\n  };\n  var queueResult = [];\n  return new Promise(function (resolve, reject) {\n    (function step(i, callback) {\n      if (i < queue.length) {\n        document.body.setAttribute('data-swal2-queue-step', i);\n\n        sweetAlert(queue[i]).then(function (result) {\n          if (typeof result.value !== 'undefined') {\n            queueResult.push(result.value);\n            step(i + 1, callback);\n          } else {\n            resetQueue();\n            resolve({ dismiss: result.dismiss });\n          }\n        });\n      } else {\n        resetQueue();\n        resolve({ value: queueResult });\n      }\n    })(0);\n  });\n};\n\n/*\n * Global function for getting the index of current popup in queue\n */\nsweetAlert.getQueueStep = function () {\n  return document.body.getAttribute('data-swal2-queue-step');\n};\n\n/*\n * Global function for inserting a popup to the queue\n */\nsweetAlert.insertQueueStep = function (step, index) {\n  if (index && index < queue.length) {\n    return queue.splice(index, 0, step);\n  }\n  return queue.push(step);\n};\n\n/*\n * Global function for deleting a popup from the queue\n */\nsweetAlert.deleteQueueStep = function (index) {\n  if (typeof queue[index] !== 'undefined') {\n    queue.splice(index, 1);\n  }\n};\n\n/*\n * Global function to close sweetAlert\n */\nsweetAlert.close = sweetAlert.closePopup = sweetAlert.closeModal = sweetAlert.closeToast = function (onComplete) {\n  var container = getContainer();\n  var popup = getPopup();\n  if (!popup) {\n    return;\n  }\n  removeClass(popup, swalClasses.show);\n  addClass(popup, swalClasses.hide);\n  clearTimeout(popup.timeout);\n\n  if (!isToast()) {\n    resetPrevState();\n    window.onkeydown = previousWindowKeyDown;\n    windowOnkeydownOverridden = false;\n  }\n\n  var removePopupAndResetState = function removePopupAndResetState() {\n    if (container.parentNode) {\n      container.parentNode.removeChild(container);\n    }\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['no-backdrop'], swalClasses['has-input'], swalClasses['toast-shown']]);\n\n    if (isModal()) {\n      undoScrollbar();\n      undoIOSfix();\n    }\n  };\n\n  // If animation is supported, animate\n  if (animationEndEvent && !hasClass(popup, swalClasses.noanimation)) {\n    popup.addEventListener(animationEndEvent, function swalCloseEventFinished() {\n      popup.removeEventListener(animationEndEvent, swalCloseEventFinished);\n      if (hasClass(popup, swalClasses.hide)) {\n        removePopupAndResetState();\n      }\n    });\n  } else {\n    // Otherwise, remove immediately\n    removePopupAndResetState();\n  }\n  if (onComplete !== null && typeof onComplete === 'function') {\n    setTimeout(function () {\n      onComplete(popup);\n    });\n  }\n};\n\n/*\n * Global function to click 'Confirm' button\n */\nsweetAlert.clickConfirm = function () {\n  return getConfirmButton().click();\n};\n\n/*\n * Global function to click 'Cancel' button\n */\nsweetAlert.clickCancel = function () {\n  return getCancelButton().click();\n};\n\n/**\n * Show spinner instead of Confirm button and disable Cancel button\n */\nsweetAlert.showLoading = sweetAlert.enableLoading = function () {\n  var popup = getPopup();\n  if (!popup) {\n    sweetAlert('');\n  }\n  popup = getPopup();\n  var actions = getActions();\n  var confirmButton = getConfirmButton();\n  var cancelButton = getCancelButton();\n\n  show(actions);\n  show(confirmButton);\n  addClass([popup, actions], swalClasses.loading);\n  confirmButton.disabled = true;\n  cancelButton.disabled = true;\n\n  popup.setAttribute('data-loading', true);\n  popup.setAttribute('aria-busy', true);\n  popup.focus();\n};\n\n/**\n * Is valid parameter\n * @param {String} paramName\n */\nsweetAlert.isValidParameter = function (paramName) {\n  return defaultParams.hasOwnProperty(paramName) || paramName === 'extraParams';\n};\n\n/**\n * Is deprecated parameter\n * @param {String} paramName\n */\nsweetAlert.isDeprecatedParameter = function (paramName) {\n  return deprecatedParams.indexOf(paramName) !== -1;\n};\n\n/**\n * Set default params for each popup\n * @param {Object} userParams\n */\nsweetAlert.setDefaults = function (userParams) {\n  if (!userParams || (typeof userParams === 'undefined' ? 'undefined' : _typeof(userParams)) !== 'object') {\n    return error('the argument for setDefaults() is required and has to be a object');\n  }\n\n  showWarningsForParams(userParams);\n\n  // assign valid params from userParams to popupParams\n  for (var param in userParams) {\n    if (sweetAlert.isValidParameter(param)) {\n      popupParams[param] = userParams[param];\n    }\n  }\n};\n\n/**\n * Reset default params for each popup\n */\nsweetAlert.resetDefaults = function () {\n  popupParams = _extends({}, defaultParams);\n};\n\n/**\n * Adapt a legacy inputValidator for use with expectRejections=false\n */\nsweetAlert.adaptInputValidator = function (legacyValidator) {\n  return function adaptedInputValidator(inputValue, extraParams) {\n    return legacyValidator.call(this, inputValue, extraParams).then(function () {\n      return undefined;\n    }, function (validationError) {\n      return validationError;\n    });\n  };\n};\n\nsweetAlert.DismissReason = Object.freeze({\n  cancel: 'cancel',\n  backdrop: 'overlay',\n  close: 'close',\n  esc: 'esc',\n  timer: 'timer'\n});\n\nsweetAlert.noop = function () {};\n\nsweetAlert.version = '7.12.17';\n\nsweetAlert.default = sweetAlert;\n\n/**\n * Set default params if `window._swalDefaults` is an object\n */\nif (typeof window !== 'undefined' && _typeof(window._swalDefaults) === 'object') {\n  sweetAlert.setDefaults(window._swalDefaults);\n}\n\n// Remember state in cases where opening and handling a modal will fiddle with it.\nvar states = {\n  previousActiveElement: null,\n  previousBodyPadding: null\n\n  // Detect Node env\n};var isNodeEnv = function isNodeEnv() {\n  return typeof window === 'undefined' || typeof document === 'undefined';\n};\n\n/*\n * Add modal + backdrop to DOM\n */\nvar init = function init(params) {\n  // Clean up the old popup if it exists\n  var c = getContainer();\n  if (c) {\n    c.parentNode.removeChild(c);\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['has-input'], swalClasses['toast-shown']]);\n  }\n\n  if (isNodeEnv()) {\n    error('SweetAlert2 requires document to initialize');\n    return;\n  }\n\n  var container = document.createElement('div');\n  container.className = swalClasses.container;\n  container.innerHTML = sweetHTML;\n\n  var targetElement = typeof params.target === 'string' ? document.querySelector(params.target) : params.target;\n  targetElement.appendChild(container);\n\n  var popup = getPopup();\n  var content = getContent();\n  var input = getChildByClass(content, swalClasses.input);\n  var file = getChildByClass(content, swalClasses.file);\n  var range = content.querySelector('.' + swalClasses.range + ' input');\n  var rangeOutput = content.querySelector('.' + swalClasses.range + ' output');\n  var select = getChildByClass(content, swalClasses.select);\n  var checkbox = content.querySelector('.' + swalClasses.checkbox + ' input');\n  var textarea = getChildByClass(content, swalClasses.textarea);\n\n  // a11y\n  popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n  popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n  if (!params.toast) {\n    popup.setAttribute('aria-modal', 'true');\n  }\n\n  var resetValidationError = function resetValidationError() {\n    sweetAlert.isVisible() && sweetAlert.resetValidationError();\n  };\n\n  input.oninput = resetValidationError;\n  file.onchange = resetValidationError;\n  select.onchange = resetValidationError;\n  checkbox.onchange = resetValidationError;\n  textarea.oninput = resetValidationError;\n\n  range.oninput = function () {\n    resetValidationError();\n    rangeOutput.value = range.value;\n  };\n\n  range.onchange = function () {\n    resetValidationError();\n    range.nextSibling.value = range.value;\n  };\n\n  return popup;\n};\n\n/*\n * Manipulate DOM\n */\n\nvar sweetHTML = ('\\n <div aria-labelledby=\"' + swalClasses.title + '\" aria-describedby=\"' + swalClasses.content + '\" class=\"' + swalClasses.popup + '\" tabindex=\"-1\">\\n   <div class=\"' + swalClasses.header + '\">\\n     <ul class=\"' + swalClasses.progresssteps + '\"></ul>\\n     <div class=\"' + swalClasses.icon + ' ' + iconTypes.error + '\">\\n       <span class=\"swal2-x-mark\"><span class=\"swal2-x-mark-line-left\"></span><span class=\"swal2-x-mark-line-right\"></span></span>\\n     </div>\\n     <div class=\"' + swalClasses.icon + ' ' + iconTypes.question + '\">?</div>\\n     <div class=\"' + swalClasses.icon + ' ' + iconTypes.warning + '\">!</div>\\n     <div class=\"' + swalClasses.icon + ' ' + iconTypes.info + '\">i</div>\\n     <div class=\"' + swalClasses.icon + ' ' + iconTypes.success + '\">\\n       <div class=\"swal2-success-circular-line-left\"></div>\\n       <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\\n       <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\\n       <div class=\"swal2-success-circular-line-right\"></div>\\n     </div>\\n     <img class=\"' + swalClasses.image + '\" />\\n     <h2 class=\"' + swalClasses.title + '\" id=\"' + swalClasses.title + '\"></h2>\\n     <button type=\"button\" class=\"' + swalClasses.close + '\">\\xD7</button>\\n   </div>\\n   <div class=\"' + swalClasses.content + '\">\\n     <div id=\"' + swalClasses.content + '\"></div>\\n     <input class=\"' + swalClasses.input + '\" />\\n     <input type=\"file\" class=\"' + swalClasses.file + '\" />\\n     <div class=\"' + swalClasses.range + '\">\\n       <input type=\"range\" />\\n       <output></output>\\n     </div>\\n     <select class=\"' + swalClasses.select + '\"></select>\\n     <div class=\"' + swalClasses.radio + '\"></div>\\n     <label for=\"' + swalClasses.checkbox + '\" class=\"' + swalClasses.checkbox + '\">\\n       <input type=\"checkbox\" />\\n     </label>\\n     <textarea class=\"' + swalClasses.textarea + '\"></textarea>\\n     <div class=\"' + swalClasses.validationerror + '\" id=\"' + swalClasses.validationerror + '\"></div>\\n   </div>\\n   <div class=\"' + swalClasses.actions + '\">\\n     <button type=\"button\" class=\"' + swalClasses.confirm + '\">OK</button>\\n     <button type=\"button\" class=\"' + swalClasses.cancel + '\">Cancel</button>\\n   </div>\\n   <div class=\"' + swalClasses.footer + '\">\\n   </div>\\n </div>\\n').replace(/(^|\\n)\\s*/g, '');\n\nvar getContainer = function getContainer() {\n  return document.body.querySelector('.' + swalClasses.container);\n};\n\nvar getPopup = function getPopup() {\n  return getContainer() ? getContainer().querySelector('.' + swalClasses.popup) : null;\n};\n\nvar getIcons = function getIcons() {\n  var popup = getPopup();\n  return popup.querySelectorAll('.' + swalClasses.icon);\n};\n\nvar elementByClass = function elementByClass(className) {\n  return getContainer() ? getContainer().querySelector('.' + className) : null;\n};\n\nvar getTitle = function getTitle() {\n  return elementByClass(swalClasses.title);\n};\n\nvar getContent = function getContent() {\n  return elementByClass(swalClasses.content);\n};\n\nvar getImage = function getImage() {\n  return elementByClass(swalClasses.image);\n};\n\nvar getProgressSteps = function getProgressSteps() {\n  return elementByClass(swalClasses.progresssteps);\n};\n\nvar getValidationError = function getValidationError() {\n  return elementByClass(swalClasses.validationerror);\n};\n\nvar getConfirmButton = function getConfirmButton() {\n  return elementByClass(swalClasses.confirm);\n};\n\nvar getCancelButton = function getCancelButton() {\n  return elementByClass(swalClasses.cancel);\n};\n\nvar getButtonsWrapper = function getButtonsWrapper() {\n  warnOnce('swal.getButtonsWrapper() is deprecated and will be removed in the next major release, use swal.getActions() instead');\n  return elementByClass(swalClasses.actions);\n};\n\nvar getActions = function getActions() {\n  return elementByClass(swalClasses.actions);\n};\n\nvar getFooter = function getFooter() {\n  return elementByClass(swalClasses.footer);\n};\n\nvar getCloseButton = function getCloseButton() {\n  return elementByClass(swalClasses.close);\n};\n\nvar getFocusableElements = function getFocusableElements() {\n  var focusableElementsWithTabindex = Array.prototype.slice.call(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])'))\n  // sort according to tabindex\n  .sort(function (a, b) {\n    a = parseInt(a.getAttribute('tabindex'));\n    b = parseInt(b.getAttribute('tabindex'));\n    if (a > b) {\n      return 1;\n    } else if (a < b) {\n      return -1;\n    }\n    return 0;\n  });\n\n  var otherFocusableElements = Array.prototype.slice.call(getPopup().querySelectorAll('button, input:not([type=hidden]), textarea, select, a, [tabindex=\"0\"]'));\n\n  return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements));\n};\n\nvar parseHtmlToContainer = function parseHtmlToContainer(param, target) {\n  if (!param) {\n    return hide(target);\n  }\n\n  if ((typeof param === 'undefined' ? 'undefined' : _typeof(param)) === 'object') {\n    target.innerHTML = '';\n    if (0 in param) {\n      for (var i = 0; i in param; i++) {\n        target.appendChild(param[i].cloneNode(true));\n      }\n    } else {\n      target.appendChild(param.cloneNode(true));\n    }\n  } else if (param) {\n    target.innerHTML = param;\n  } else {}\n  show(target);\n};\n\nvar isModal = function isModal() {\n  return !document.body.classList.contains(swalClasses['toast-shown']);\n};\n\nvar isToast = function isToast() {\n  return document.body.classList.contains(swalClasses['toast-shown']);\n};\n\nvar isLoading = function isLoading() {\n  return getPopup().hasAttribute('data-loading');\n};\n\nvar hasClass = function hasClass(elem, className) {\n  if (elem.classList) {\n    return elem.classList.contains(className);\n  }\n  return false;\n};\n\nvar focusInput = function focusInput(input) {\n  input.focus();\n\n  // place cursor at end of text in text input\n  if (input.type !== 'file') {\n    // http://stackoverflow.com/a/2345915/1331425\n    var val = input.value;\n    input.value = '';\n    input.value = val;\n  }\n};\n\nvar addOrRemoveClass = function addOrRemoveClass(target, classList, add) {\n  if (!target || !classList) {\n    return;\n  }\n  if (typeof classList === 'string') {\n    classList = classList.split(/\\s+/).filter(Boolean);\n  }\n  classList.forEach(function (className) {\n    if (target.forEach) {\n      target.forEach(function (elem) {\n        add ? elem.classList.add(className) : elem.classList.remove(className);\n      });\n    } else {\n      add ? target.classList.add(className) : target.classList.remove(className);\n    }\n  });\n};\n\nvar addClass = function addClass(target, classList) {\n  addOrRemoveClass(target, classList, true);\n};\n\nvar removeClass = function removeClass(target, classList) {\n  addOrRemoveClass(target, classList, false);\n};\n\nvar getChildByClass = function getChildByClass(elem, className) {\n  for (var i = 0; i < elem.childNodes.length; i++) {\n    if (hasClass(elem.childNodes[i], className)) {\n      return elem.childNodes[i];\n    }\n  }\n};\n\nvar show = function show(elem) {\n  elem.style.opacity = '';\n  elem.style.display = elem.id === swalClasses.content ? 'block' : 'flex';\n};\n\nvar hide = function hide(elem) {\n  elem.style.opacity = '';\n  elem.style.display = 'none';\n};\n\nvar empty = function empty(elem) {\n  while (elem.firstChild) {\n    elem.removeChild(elem.firstChild);\n  }\n};\n\n// borrowed from jquery $(elem).is(':visible') implementation\nvar isVisible = function isVisible(elem) {\n  return elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n};\n\nvar removeStyleProperty = function removeStyleProperty(elem, property) {\n  if (elem.style.removeProperty) {\n    elem.style.removeProperty(property);\n  } else {\n    elem.style.removeAttribute(property);\n  }\n};\n\nvar animationEndEvent = function () {\n  // Prevent run in Node env\n  if (isNodeEnv()) {\n    return false;\n  }\n\n  var testEl = document.createElement('div');\n  var transEndEventNames = {\n    'WebkitAnimation': 'webkitAnimationEnd',\n    'OAnimation': 'oAnimationEnd oanimationend',\n    'animation': 'animationend'\n  };\n  for (var i in transEndEventNames) {\n    if (transEndEventNames.hasOwnProperty(i) && typeof testEl.style[i] !== 'undefined') {\n      return transEndEventNames[i];\n    }\n  }\n\n  return false;\n}();\n\n// Reset previous window keydown handler and focued element\nvar resetPrevState = function resetPrevState() {\n  if (states.previousActiveElement && states.previousActiveElement.focus) {\n    var x = window.scrollX;\n    var y = window.scrollY;\n    states.previousActiveElement.focus();\n    if (typeof x !== 'undefined' && typeof y !== 'undefined') {\n      // IE doesn't have scrollX/scrollY support\n      window.scrollTo(x, y);\n    }\n  }\n};\n\n// Measure width of scrollbar\n// https://github.com/twbs/bootstrap/blob/master/js/modal.js#L279-L286\nvar measureScrollbar = function measureScrollbar() {\n  var supportsTouch = 'ontouchstart' in window || navigator.msMaxTouchPoints;\n  if (supportsTouch) {\n    return 0;\n  }\n  var scrollDiv = document.createElement('div');\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n};\n\n/**\n * Inject a string of CSS into the page header\n *\n * @param {String} css\n */\nvar injectCSS = function injectCSS() {\n  var css = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  // Prevent run in Node env\n  if (isNodeEnv()) {\n    return false;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  head.appendChild(style);\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n};\n\ninjectCSS(styles);\n\nreturn sweetAlert;\n\n})));\nif (typeof window !== 'undefined' && window.Sweetalert2) window.sweetAlert = window.swal = window.Sweetalert2;\n",null]}