{"remainingRequest":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@swimlane/ngx-charts/release/common/charts/chart.component.js","dependencies":[{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@swimlane/ngx-charts/release/common/charts/chart.component.js","mtime":1519060217000},{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/cache-loader/dist/cjs.js","mtime":1553019068977},{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, ViewContainerRef, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { TooltipService } from '../tooltip';\nvar ChartComponent = /*@__PURE__*/ (function () {\n    function ChartComponent(vcr, tooltipService) {\n        this.vcr = vcr;\n        this.tooltipService = tooltipService;\n        this.showLegend = false;\n        this.animations = true;\n        this.legendLabelClick = new EventEmitter();\n        this.legendLabelActivate = new EventEmitter();\n        this.legendLabelDeactivate = new EventEmitter();\n        this.tooltipService.injectionService.setRootViewContainer(this.vcr);\n    }\n    ChartComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    ChartComponent.prototype.update = function () {\n        var legendColumns = 0;\n        if (this.showLegend) {\n            this.legendType = this.getLegendType();\n            if (this.legendType === 'scaleLegend') {\n                legendColumns = 1;\n            }\n            else {\n                legendColumns = 2;\n            }\n        }\n        var chartColumns = 12 - legendColumns;\n        this.chartWidth = ~~(this.view[0] * chartColumns / 12.0);\n        this.legendWidth = ~~(this.view[0] * legendColumns / 12.0);\n    };\n    ChartComponent.prototype.getLegendType = function () {\n        if (this.legendOptions.scaleType === 'linear') {\n            return 'scaleLegend';\n        }\n        else {\n            return 'legend';\n        }\n    };\n    return ChartComponent;\n}());\nexport { ChartComponent };\n//# sourceMappingURL=chart.component.js.map \n",null]}