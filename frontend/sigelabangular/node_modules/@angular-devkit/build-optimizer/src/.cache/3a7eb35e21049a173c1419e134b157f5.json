{"remainingRequest":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/ng2-completer/services/completer-base-data.js","dependencies":[{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/ng2-completer/services/completer-base-data.js","mtime":1504220465000},{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/cache-loader/dist/cjs.js","mtime":1553019068977},{"path":"/home/jeff/Projects/sigelab/frontend/sigelabangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { Subject } from \"rxjs/Subject\";\nimport { isNil } from \"../globals\";\nvar CompleterBaseData = /*@__PURE__*/ (function (_super) {\n    __extends(CompleterBaseData, _super);\n    function CompleterBaseData() {\n        return _super.call(this) || this;\n    }\n    CompleterBaseData.prototype.cancel = function () { };\n    CompleterBaseData.prototype.searchFields = function (searchFields) {\n        this._searchFields = searchFields;\n        return this;\n    };\n    CompleterBaseData.prototype.titleField = function (titleField) {\n        this._titleField = titleField;\n        return this;\n    };\n    CompleterBaseData.prototype.descriptionField = function (descriptionField) {\n        this._descriptionField = descriptionField;\n        return this;\n    };\n    CompleterBaseData.prototype.imageField = function (imageField) {\n        this._imageField = imageField;\n        return this;\n    };\n    CompleterBaseData.prototype.convertToItem = function (data) {\n        var image = null;\n        var formattedText;\n        var formattedDesc = null;\n        if (this._titleField) {\n            formattedText = this.extractTitle(data);\n        }\n        else {\n            formattedText = data;\n        }\n        if (typeof formattedText !== \"string\") {\n            formattedText = JSON.stringify(formattedText);\n        }\n        if (this._descriptionField) {\n            formattedDesc = this.extractValue(data, this._descriptionField);\n        }\n        if (this._imageField) {\n            image = this.extractValue(data, this._imageField);\n        }\n        if (isNil(formattedText)) {\n            return null;\n        }\n        return {\n            title: formattedText,\n            description: formattedDesc,\n            image: image,\n            originalObject: data\n        };\n    };\n    CompleterBaseData.prototype.extractMatches = function (data, term) {\n        var _this = this;\n        var matches = [];\n        var searchFields = this._searchFields ? this._searchFields.split(\",\") : null;\n        if (this._searchFields !== null && this._searchFields !== undefined && term != \"\") {\n            matches = data.filter(function (item) {\n                var values = searchFields ? searchFields.map(function (searchField) { return _this.extractValue(item, searchField); }).filter(function (value) { return !!value; }) : [item];\n                return values.some(function (value) { return value.toString().toLowerCase().indexOf(term.toString().toLowerCase()) >= 0; });\n            });\n        }\n        else {\n            matches = data;\n        }\n        return matches;\n    };\n    CompleterBaseData.prototype.extractTitle = function (item) {\n        var _this = this;\n        // split title fields and run extractValue for each and join with ' '\n        return this._titleField.split(\",\")\n            .map(function (field) {\n            return _this.extractValue(item, field);\n        })\n            .reduce(function (acc, titlePart) { return acc ? acc + \" \" + titlePart : titlePart; });\n    };\n    CompleterBaseData.prototype.extractValue = function (obj, key) {\n        var keys;\n        var result;\n        if (key) {\n            keys = key.split(\".\");\n            result = obj;\n            for (var i = 0; i < keys.length; i++) {\n                if (result) {\n                    result = result[keys[i]];\n                }\n            }\n        }\n        else {\n            result = obj;\n        }\n        return result;\n    };\n    CompleterBaseData.prototype.processResults = function (matches) {\n        var i;\n        var results = [];\n        if (matches && matches.length > 0) {\n            for (i = 0; i < matches.length; i++) {\n                var item = this.convertToItem(matches[i]);\n                if (item) {\n                    results.push(item);\n                }\n            }\n        }\n        return results;\n    };\n    return CompleterBaseData;\n}(Subject));\nexport { CompleterBaseData };\n//# sourceMappingURL=completer-base-data.js.map \n",null]}